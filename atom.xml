<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ionluo的个人博客站点</title>
  
  <subtitle>记录生活和技术的点点滴滴</subtitle>
  <link href="http://www.ionluo.cn/blog/atom.xml" rel="self"/>
  
  <link href="http://www.ionluo.cn/blog/"/>
  <updated>2022-06-10T09:03:44.738Z</updated>
  <id>http://www.ionluo.cn/blog/</id>
  
  <author>
    <name>ionluo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【前端】前端PDF预览(pdfjs)</title>
    <link href="http://www.ionluo.cn/blog/posts/3de8ed77.html"/>
    <id>http://www.ionluo.cn/blog/posts/3de8ed77.html</id>
    <published>2022-06-09T10:04:55.000Z</published>
    <updated>2022-06-10T09:03:44.738Z</updated>
    
    <content type="html"><![CDATA[<h2 id="印章无法显示问题"><a href="#印章无法显示问题" class="headerlink" title="印章无法显示问题"></a>印章无法显示问题</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>在 pdfjs/build/pdf.worker.js 搜索 <code>if (data.fieldType === &#39;Sig&#39;)</code>，如下修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (data.fieldType === <span class="string">&#x27;Sig&#x27;</span>) &#123;</span><br><span class="line">    _this2.setFlags(_util.AnnotationFlag.HIDDEN);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">改成</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data.fieldType === <span class="string">&#x27;Sig&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// _this2.setFlags(_util.AnnotationFlag.HIDDEN);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>推荐，该方法影响相对可控，但是客户需要了解印章是需要数字签名校验的，这里的修改方式是放弃了数字签名的验证。</p><p><a href="https://github.com/mozilla/pdf.js/issues/13058">https://github.com/mozilla/pdf.js/issues/13058</a></p></blockquote><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>升级pdfjs的版本</p><blockquote><p>在 <a href="https://github.com/mozilla/pdf.js/issues/13428">https://github.com/mozilla/pdf.js/issues/13428</a> 有提到最新版本已解决</p></blockquote><p><a href="https://github.com/mozilla/pdf.js/releases/tag/v2.14.305">pdfjs-2.14.305-dist.zip</a></p><blockquote><p>不确定升级版本是否有其他影响，比如渲染效果差异。</p><p>升级后并非支持了数字签名的验证，而是放弃了验证，增加了安全提示。</p><p>详见：<a href="https://github.com/mozilla/pdf.js/pull/13214">https://github.com/mozilla/pdf.js/pull/13214</a></p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://segmentfault.com/q/1010000016537719">https://segmentfault.com/q/1010000016537719</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;印章无法显示问题&quot;&gt;&lt;a href=&quot;#印章无法显示问题&quot; class=&quot;headerlink&quot; title=&quot;印章无法显示问题&quot;&gt;&lt;/a&gt;印章无法显示问题&lt;/h2&gt;&lt;h3 id=&quot;方法1&quot;&gt;&lt;a href=&quot;#方法1&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="前端" scheme="http://www.ionluo.cn/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="实战章无法显示问题" scheme="http://www.ionluo.cn/blog/tags/%E5%AE%9E%E6%88%98%E7%AB%A0%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>【IDE】IDEA使用经验总结</title>
    <link href="http://www.ionluo.cn/blog/posts/ca25858e.html"/>
    <id>http://www.ionluo.cn/blog/posts/ca25858e.html</id>
    <published>2022-06-06T06:56:02.000Z</published>
    <updated>2022-06-10T09:03:44.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题"><a href="#解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题" class="headerlink" title="解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题"></a>解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题</h2><p><strong>问题</strong></p><p>个人习惯将Terminal配置为git bash。由于经常在Terminal工具窗口下执行git命令，包括vim操作。但是，在Vim编辑模式下，按ESC键退出insert mode时，idea会隐藏整个Terminal工具窗口，并且光标自动定位到idea的编辑窗口，十分不方便。</p><p>在2021.1中：按ESC键无法退出insert mode时，并且光标自动定位到idea的编辑窗口，操蛋了。</p><p><strong>解决办法</strong></p><p>使用Ctrl+Alt+S快捷键打开idea全局配置，在快捷键映射配置Settings -&gt; keymap中，找到 Plug-ins -&gt; Terminal -&gt; Switch Focus To Editor，删除其快捷键绑定即可。</p><blockquote><p>作者：晓码君<br>链接：<a href="https://www.jianshu.com/p/f1ae155cda6e">https://www.jianshu.com/p/f1ae155cda6e</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题&quot;&gt;&lt;a href=&quot;#解决IDEA在使用Terminal时，按ESC键切换至编辑窗口的问题&quot; class=&quot;headerlink&quot; title=&quot;解决IDEA在使用Terminal时，按ESC键</summary>
      
    
    
    
    
    <category term="IDE" scheme="http://www.ionluo.cn/blog/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>的JQuery</title>
    <link href="http://www.ionluo.cn/blog/posts/undefined.html"/>
    <id>http://www.ionluo.cn/blog/posts/undefined.html</id>
    <published>2022-05-24T01:16:20.000Z</published>
    <updated>2022-05-24T06:00:28.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jquery-fn-extend与jquery-extend"><a href="#jquery-fn-extend与jquery-extend" class="headerlink" title="jquery.fn.extend与jquery.extend"></a>jquery.fn.extend与jquery.extend</h2><p>jQuery为开发插件提拱了两个方法，分别是：</p><ul><li>jQuery.fn.extend(object);  为扩展jQuery类本身.为类添加新的方法。</li><li>jQuery.extend(object);  给jQuery对象添加方法。</li></ul><p>fn 是什么东西呢。查看jQuery代码，就不难发现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jQuery.fn = jQuery.prototype = &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">selector, context</span>) </span>&#123; <span class="comment">// ….</span></span><br><span class="line">        <span class="comment">// ……</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原来 jQuery.fn = jQuery.prototype.对prototype肯定不会陌生啦。</p><p>虽然 javascript　没有明确的类的概念，但是用类来理解它，会更方便。</p><p>jQuery便是一个封装得非常好的类，比如我们用 语句　$(“#btn1″) 会生成一个 jQuery类的实例。</p><p><strong>jQuery.extend(object);</strong></p><p>为jQuery类添加添加类方法，可以理解为添加静态方法。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.extend(&#123;  </span><br><span class="line">　　add:<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a+b;&#125;</span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure><p>便为　jQuery　添加一个为 add　的　“静态方法”，之后便可以在引入 jQuery　的地方，使用这个方法了，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.add(<span class="number">3</span>,<span class="number">4</span>); <span class="comment">//return 7 </span></span><br></pre></td></tr></table></figure><p><strong>jQuery.fn.extend(object);</strong></p><p> 对jQuery.prototype进得扩展，就是为jQuery类添加“成员函数”。jQuery类的实例可以使用这个“成员函数”。</p><p>比如我们要开发一个插件，做一个特殊的编辑框，当它被点击时，便alert 当前编辑框里的内容。可以这么做：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.fn.extend(&#123;</span><br><span class="line">    alertWhileClick: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="built_in">this</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert($(<span class="built_in">this</span>).val())</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#input1&#x27;</span>).alertWhileClick() <span class="comment">// 页面上为：&lt;input id=&quot;input1″ type=&quot;text&quot;/&gt;</span></span><br></pre></td></tr></table></figure><p>$(“#input1″)　为一个jQuery实例，当它调用成员方法 alertWhileClick后，便实现了扩展，每次被点击时它会先弹出目前编辑里的内容。</p><p>真实的开发过程中，当然不会做这么小白的插件，事实上jQuery提拱了丰富的操作文档，事件，CSS ,Ajax、效果的方法，结合这些方法，便可以开发出更加 Niubility 的插件。</p><p>注意：</p><p>在这里还有一个特殊的地方，就是在函数开头的地方有jQuery.extend = jQuery.fn.extend，而在程序的前面已经将jQuery.prototype赋值给jQuery.fn了，所以在后面的调用中会出现 jQuery.extend()和jQuery.fn.extend()的不同调用，这两个方法调用产生的结果也不一样，jQuery.extend() 的调用并不会把方法扩展到对象的实例上，引用它的方法也需要通过jQuery类来实现，如jQuery.init()，而 jQuery.fn.extend()的调用把方法扩展到了对象的prototype上，所以实例化一个jQuery对象的时候，它就具有了这些方法，这 是很重要的，在jQuery.js中到处体现这一点</p><blockquote><p>摘自：<a href="https://blog.csdn.net/mengzuchao/article/details/80629327">https://blog.csdn.net/mengzuchao/article/details/80629327</a></p><p>这里有个问题，JQuery源码中this就是JQuery实例，为何这里需要加$()进行转换，详见<a href="https://lib.baomitu.com/jquery/3.5.1/jquery.js">Jquery源码</a>第10571行<code>offset:</code>的写法</p></blockquote><h2 id="position-引起的问题"><a href="#position-引起的问题" class="headerlink" title="position()引起的问题"></a>position()引起的问题</h2><p>position获取到的位置不是相对定位父元素而是transform:translate3d(0,0,0)的元素。</p><p>JQuery版本：v3.5.1</p><p>问题描述：</p><ol><li>position 在滚动可以正常计算，得到当前page相对父容器的偏移量（和IOS相同），√</li><li>在移动安卓可以正常计算，得到当前page不考虑transform情况的相对父容器的偏移量，×</li><li>在移动IOS计算异常，得到当前page事实上相对父容器的偏移量，√</li></ol><p>造成IOS和安卓position得到结果不一致的原因是？这就需要分析jquery的实现源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">position: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="built_in">this</span>[ <span class="number">0</span> ] ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> offsetParent, offset, doc,</span><br><span class="line">        elem = <span class="built_in">this</span>[ <span class="number">0</span> ],</span><br><span class="line">        parentOffset = &#123; <span class="attr">top</span>: <span class="number">0</span>, <span class="attr">left</span>: <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// position:fixed elements are offset from the viewport, which itself always has zero offset</span></span><br><span class="line">    <span class="keyword">if</span> ( jQuery.css( elem, <span class="string">&quot;position&quot;</span> ) === <span class="string">&quot;fixed&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Assume position:fixed implies availability of getBoundingClientRect</span></span><br><span class="line">        offset = elem.getBoundingClientRect();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        offset = <span class="built_in">this</span>.offset();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Account for the *real* offset parent, which can be the document or its root element</span></span><br><span class="line">        <span class="comment">// when a statically positioned element is identified</span></span><br><span class="line">        doc = elem.ownerDocument;</span><br><span class="line">        offsetParent = elem.offsetParent || doc.documentElement;</span><br><span class="line">        <span class="keyword">while</span> ( offsetParent &amp;&amp;</span><br><span class="line">               ( offsetParent === doc.body || offsetParent === doc.documentElement ) &amp;&amp;</span><br><span class="line">               jQuery.css( offsetParent, <span class="string">&quot;position&quot;</span> ) === <span class="string">&quot;static&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">            offsetParent = offsetParent.parentNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( offsetParent &amp;&amp; offsetParent !== elem &amp;&amp; offsetParent.nodeType === <span class="number">1</span> ) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Incorporate borders into its offset, since they are outside its content origin</span></span><br><span class="line">            parentOffset = jQuery( offsetParent ).offset();</span><br><span class="line">            parentOffset.top += jQuery.css( offsetParent, <span class="string">&quot;borderTopWidth&quot;</span>, <span class="literal">true</span> );</span><br><span class="line">            parentOffset.left += jQuery.css( offsetParent, <span class="string">&quot;borderLeftWidth&quot;</span>, <span class="literal">true</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Subtract parent offsets and element margins</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        top: offset.top - parentOffset.top - jQuery.css( elem, <span class="string">&quot;marginTop&quot;</span>, <span class="literal">true</span> ),</span><br><span class="line">        left: offset.left - parentOffset.left - jQuery.css( elem, <span class="string">&quot;marginLeft&quot;</span>, <span class="literal">true</span> )</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Account for the *real* offset parent, which can be the document or its root element</span></span><br><span class="line"><span class="comment">// when a statically positioned element is identified</span></span><br><span class="line">doc = elem.ownerDocument;</span><br><span class="line">offsetParent = elem.offsetParent || doc.documentElement;</span><br><span class="line"><span class="keyword">while</span> ( offsetParent &amp;&amp;</span><br><span class="line">       ( offsetParent === doc.body || offsetParent === doc.documentElement ) &amp;&amp;</span><br><span class="line">       jQuery.css( offsetParent, <span class="string">&quot;position&quot;</span> ) === <span class="string">&quot;static&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    offsetParent = offsetParent.parentNode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题出在elem.offsetParent这里，elem.offsetParent在安卓和ios上获取的父元素不同导致，但是这里transform不为none会被获取到，即使加上position:static也不行</p><p>查看<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent">MDN</a>可知：该方法获取的不是定位的父元素,而是containment hierarchy，因此只能自定义一个jquery实例方法代替jquery的position方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$.fn.extend(&#123;</span><br><span class="line">    customPosition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="built_in">this</span>[ <span class="number">0</span> ] ) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> offsetParent, offset, doc,</span><br><span class="line">            elem = <span class="built_in">this</span>[ <span class="number">0</span> ],</span><br><span class="line">            parentOffset = &#123; <span class="attr">top</span>: <span class="number">0</span>, <span class="attr">left</span>: <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// position:fixed elements are offset from the viewport, which itself always has zero offset</span></span><br><span class="line">        <span class="keyword">if</span> ( jQuery.css( elem, <span class="string">&quot;position&quot;</span> ) === <span class="string">&quot;fixed&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Assume position:fixed implies availability of getBoundingClientRect</span></span><br><span class="line">            offset = elem.getBoundingClientRect();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            offset = <span class="built_in">this</span>.offset();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// fixup offsetParent has different result in Android, IOS when &#x27;transform&#x27; is exist</span></span><br><span class="line">            offsetParent = offsetParent.parentNode;</span><br><span class="line">            <span class="keyword">while</span> ( offsetParent &amp;&amp; jQuery.css( offsetParent, <span class="string">&quot;position&quot;</span> ) === <span class="string">&quot;static&quot;</span> ) &#123;</span><br><span class="line">                offsetParent = offsetParent.parentNode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( offsetParent &amp;&amp; offsetParent !== elem &amp;&amp; offsetParent.nodeType === <span class="number">1</span> ) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Incorporate borders into its offset, since they are outside its content origin</span></span><br><span class="line">                parentOffset = jQuery( offsetParent ).offset();</span><br><span class="line">                parentOffset.top += jQuery.css( offsetParent, <span class="string">&quot;borderTopWidth&quot;</span>, <span class="literal">true</span> );</span><br><span class="line">                parentOffset.left += jQuery.css( offsetParent, <span class="string">&quot;borderLeftWidth&quot;</span>, <span class="literal">true</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Subtract parent offsets and element margins</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            top: offset.top - parentOffset.top - jQuery.css( elem, <span class="string">&quot;marginTop&quot;</span>, <span class="literal">true</span> ),</span><br><span class="line">            left: offset.left - parentOffset.left - jQuery.css( elem, <span class="string">&quot;marginLeft&quot;</span>, <span class="literal">true</span> )</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://github.com/jquery/jquery/issues/1765">https://github.com/jquery/jquery/issues/1765</a><br><a href="https://blog.csdn.net/weixin_44260238/article/details/89555742">https://blog.csdn.net/weixin_44260238/article/details/89555742</a><br><a href="https://blog.csdn.net/js_learn/article/details/88726253">https://blog.csdn.net/js_learn/article/details/88726253</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;jquery-fn-extend与jquery-extend&quot;&gt;&lt;a href=&quot;#jquery-fn-extend与jquery-extend&quot; class=&quot;headerlink&quot; title=&quot;jquery.fn.extend与jquery.extend&quot;&gt;</summary>
      
    
    
    
    
    <category term="前端" scheme="http://www.ionluo.cn/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JQuery" scheme="http://www.ionluo.cn/blog/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>【转载】Centos7开放及查看端口</title>
    <link href="http://www.ionluo.cn/blog/posts/bc642a59.html"/>
    <id>http://www.ionluo.cn/blog/posts/bc642a59.html</id>
    <published>2022-05-23T06:04:55.000Z</published>
    <updated>2022-06-10T09:03:44.831Z</updated>
    
    <content type="html"><![CDATA[<p>1、开放端口</p><p><strong>firewall-cmd –zone=public –add-port=5672/tcp –permanent</strong>  # 开放5672端口</p><p><strong>firewall-cmd –zone=public –remove-port=5672/tcp –permanent</strong> #关闭5672端口</p><p><strong>firewall-cmd –reload</strong>  # 配置立即生效</p><p>2、查看防火墙所有开放的端口</p><p><strong>firewall-cmd –zone=public –list-ports</strong></p><p>3.、关闭防火墙</p><p>如果要开放的端口太多，嫌麻烦，可以关闭防火墙，安全性自行评估</p><p><strong>systemctl stop firewalld.service</strong></p><p>4、查看防火墙状态</p><p> <strong>firewall-cmd –state</strong></p><p>5、查看监听的端口</p><p><strong>netstat -lnpt</strong></p><p><em>PS:centos7默认没有 netstat 命令，需要安装 net-tools 工具，yum install -y net-tools</em></p><p>6、检查端口被哪个进程占用</p><p><strong>netstat -lnpt |grep 5672</strong></p><p>7、查看进程的详细信息</p><p><strong>ps 6832</strong></p><p>8、中止进程</p><p><strong>kill -9 6832</strong></p><blockquote><p>转自：<a href="https://www.cnblogs.com/heqiuyong/p/10460150.html">https://www.cnblogs.com/heqiuyong/p/10460150.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、开放端口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;firewall-cmd –zone=public –add-port=5672/tcp –permanent&lt;/strong&gt;  # 开放5672端口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;firewall-cmd –zone=publ</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://www.ionluo.cn/blog/tags/Linux/"/>
    
    <category term="转载" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="Centos" scheme="http://www.ionluo.cn/blog/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】9. 案例特训</title>
    <link href="http://www.ionluo.cn/blog/posts/d8703dc6.html"/>
    <id>http://www.ionluo.cn/blog/posts/d8703dc6.html</id>
    <published>2022-05-23T02:34:57.471Z</published>
    <updated>2022-06-10T09:03:44.828Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这里和第21章有重合，复习以第21章为准</p></blockquote><p>每道题25分，5选3，90分钟，45分合格<br>第一道必答，后4道选答2题</p><h1 id="案例特训专题1-案例技巧与系统规划"><a href="#案例特训专题1-案例技巧与系统规划" class="headerlink" title="案例特训专题1-案例技巧与系统规划"></a>案例特训专题1-案例技巧与系统规划</h1><h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424191509422.png" alt="image-20220424191509422"></p><h2 id="考点分析"><a href="#考点分析" class="headerlink" title="考点分析"></a>考点分析</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424191957433.png" alt="image-20220424191957433"></p><blockquote><p>负责任地说，这里罗列的并不一定就会考到，没有罗列的不一定就不会考到</p></blockquote><h3 id="系统计划"><a href="#系统计划" class="headerlink" title="系统计划"></a>系统计划</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192215945.png" alt="image-20220424192215945"></p><p>项目管理中的立项问题</p><p>重点是可行性研究与效益分析，另外遗留系统的评价和处理策略以及新旧系统的分析和比较都是比较重要的点</p><h3 id="需求获取和分析"><a href="#需求获取和分析" class="headerlink" title="需求获取和分析"></a>需求获取和分析</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192424123.png" alt="image-20220424192424123"></p><blockquote><p>列表中的考中较少，主要在系统设计中考需求分析的一些相关内容</p></blockquote><h3 id="系统分析"><a href="#系统分析" class="headerlink" title="系统分析"></a>系统分析</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192624298.png" alt="image-20220424192624298"></p><blockquote><p>可靠性计算</p></blockquote><h3 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192738077.png" alt="image-20220424192738077"></p><h3 id="文档编制和沟通能力"><a href="#文档编制和沟通能力" class="headerlink" title="文档编制和沟通能力"></a>文档编制和沟通能力</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192809081.png" alt="image-20220424192809081"></p><h3 id="系统运行和维护"><a href="#系统运行和维护" class="headerlink" title="系统运行和维护"></a>系统运行和维护</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192825042.png" alt="image-20220424192825042"></p><blockquote><p>案例里面不怎么考，但是论文里面有可能涉及</p></blockquote><h3 id="软件过程改进-系统开发项目管理"><a href="#软件过程改进-系统开发项目管理" class="headerlink" title="软件过程改进 - 系统开发项目管理"></a>软件过程改进 - 系统开发项目管理</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424192919834.png" alt="image-20220424192919834"></p><h3 id="企业信息化战略与实施"><a href="#企业信息化战略与实施" class="headerlink" title="企业信息化战略与实施"></a>企业信息化战略与实施</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193023590.png" alt="image-20220424193023590"></p><p>集成</p><h3 id="历年考点"><a href="#历年考点" class="headerlink" title="历年考点"></a>历年考点</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193148842.png" alt="image-20220424193148842"></p><p>如果没有做过嵌入式开发，尽量不要选</p><h2 id="如何解答试题"><a href="#如何解答试题" class="headerlink" title="如何解答试题"></a>如何解答试题</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193703481.png" alt="image-20220424193703481"></p><blockquote><p>先看问题，再阅读正文</p><p>定性分析、定量估算：找考点，列条目，避免长篇大论（案例分析是人工阅卷，阅卷老师不希望看到过多无用的回答）</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193850529.png" alt="image-20220424193850529"></p><blockquote><p>案例分析记正分，因此只要认为对的都可以写上，除了里面的多选题，那个还是采用多选题的记分规则，错选不得分</p><p>技术角度（哪些技术，技术优势是什么），商业需求角度（可用性，稳定性，可修改性等）</p><p>圈题，即要在答题卡里面选择你做的题</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193905561.png" alt="image-20220424193905561"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193920802.png" alt="image-20220424193920802"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424193939578.png" alt="image-20220424193939578"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424194000529.png" alt="image-20220424194000529"></p><p>参考答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424195450836.png" alt="image-20220424195450836"></p><blockquote><p>问题2中ab(有一定的争议，一般需要开发阶段引入)是开发过程产生的成本，因此是开发成本，f也有一定的争议，因为没有说明是什么软件。</p><p>应用服务器数量减少，购买服务器就可以减少，有形收益</p><p>问题3：静态投资回收期用运营成本和运营收益来计算，动态投资回收期用总成本和总收益的折现值来计算</p></blockquote>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】8. 项目管理</title>
    <link href="http://www.ionluo.cn/blog/posts/81d9fff1.html"/>
    <id>http://www.ionluo.cn/blog/posts/81d9fff1.html</id>
    <published>2022-05-23T02:34:57.470Z</published>
    <updated>2022-06-10T09:03:44.824Z</updated>
    
    <content type="html"><![CDATA[<p>分值比例不高，一般就2分的选择题</p><p>如果出现案例分析题，一般是时间管理的大题，分值就较高了</p><h2 id="课程内容概要"><a href="#课程内容概要" class="headerlink" title="课程内容概要"></a>课程内容概要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421201933722.png" alt="image-20220421201933722"></p><h2 id="范围管理"><a href="#范围管理" class="headerlink" title="范围管理"></a>范围管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220422082538272.png" alt="image-20220422082538272"></p><p>WBS（Work BreakDown Structure）：工作拆分结构</p><h2 id="时间管理"><a href="#时间管理" class="headerlink" title="时间管理"></a>时间管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220422082941086.png" alt="image-20220422082941086"></p><h2 id="成本管理"><a href="#成本管理" class="headerlink" title="成本管理"></a>成本管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424081328982.png" alt="image-20220424081328982"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424081443132.png" alt="image-20220424081443132"></p><p>AC = 400 元</p><p>EV = 3 * 100 = 300 元</p><p>PV = 1000 * 5 / 10 = 500 元</p><p>进度偏差，成本偏差，进度绩效指数，成本绩效指数都可以根据上面结果计算出来</p><h2 id="软件质量管理"><a href="#软件质量管理" class="headerlink" title="软件质量管理"></a>软件质量管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424082225951.png" alt="image-20220424082225951"></p><p>质量控制的一种手段是：测试。测试是一种滞后的手段，因为此时错误已经引入了，所以产生了质量保证，对体系，对过程进行质量管控（CMMI体系）。</p><h2 id="软件配置管理"><a href="#软件配置管理" class="headerlink" title="软件配置管理"></a>软件配置管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424082604557.png" alt="image-20220424082604557"></p><p>要交付给客户的成果，我们都会定义成配置项</p><p>配置项可以进一步分为 基线配置项（可交付维度，如需求文档、设计文档、源代码等）和非基线配置项（项目管理维度，如项目计划书）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424084254153.png" alt="image-20220424084254153"></p><p>配置库：保存配置的库</p><p>开发库：可以随时修改的库，如gitlab的保存代码</p><p>受控库：负责管理基线，如gitlab的合并</p><p>产品库：完全不能改，如果要改，则打回受控库，如gitlab的tag</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424084528541.png" alt="image-20220424084528541"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424084816494.png" alt="image-20220424084816494"></p><h2 id="风险管理"><a href="#风险管理" class="headerlink" title="风险管理"></a>风险管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424185817345.png" alt="image-20220424185817345"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424190036341.png" alt="image-20220424190036341"></p><p>项目风险是项目层面的。如假设一个项目成本要5万，结果项目团队估算，只要4万，最终因为44万完不成项目，造成风险。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424190414133.png" alt="image-20220424190414133"></p><p>风险曝光度也叫风险爆露。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424190738277.png" alt="image-20220424190738277"></p><h2 id="案例分析题"><a href="#案例分析题" class="headerlink" title="案例分析题"></a>案例分析题</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424190817631.png" alt="image-20220424190817631"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424190956830.png" alt="image-20220424190956830"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424191007782.png" alt="image-20220424191007782"></p><blockquote><p>未看完讲解</p></blockquote><p>参考答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220424191058974.png" alt="image-20220424191058974"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】7. 系统测试与维护</title>
    <link href="http://www.ionluo.cn/blog/posts/501c69a3.html"/>
    <id>http://www.ionluo.cn/blog/posts/501c69a3.html</id>
    <published>2022-05-23T02:34:57.468Z</published>
    <updated>2022-06-10T09:03:44.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容概要"><a href="#课程内容概要" class="headerlink" title="课程内容概要"></a>课程内容概要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220419081900571.png" alt="image-20220419081900571"></p><h2 id="软件测试概念与方法"><a href="#软件测试概念与方法" class="headerlink" title="软件测试概念与方法"></a>软件测试概念与方法</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220419082006410.png" alt="image-20220419082006410"></p><p>如何把测试提前？V模型，测试驱动开发</p><p>静态测试：全人工的测试，不利用到计算机</p><p>动态测试：会利用到计算机进行计算结果</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220419082510405.png" alt="image-20220419082510405"></p><p>等价类划分：挑选不同的等价类用例进行测试</p><p>逻辑覆盖测试在图里面是从最弱（语句覆盖）到最强（路径覆盖）的覆盖</p><h3 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220419083136033.png" alt="image-20220419083136033"></p><p>验收测试必须用户测试</p><p>Alpha和Beta测试针对的是产品</p><p>系统测试是最繁杂的阶段，功能测试也是系统测试，最重要的是性能测试</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420082400044.png" alt="image-20220420082400044"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420082658547.png" alt="image-20220420082658547"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220419083547754.png" alt="image-20220419083547754"></p><p>确认测试也是验收测试（验收测试和系统测试通常没有固定的顺序，对于纯软件的系统可能会跳过系统测试）</p><p>回归测试不属于测试阶段里面的流程，但是是必不可少的部分。软件变更后，变更的正确性需要回归测试来检验。</p><h3 id="面向对象的测试"><a href="#面向对象的测试" class="headerlink" title="面向对象的测试"></a>面向对象的测试</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420082857210.png" alt="image-20220420082857210"></p><h3 id="测试自动化"><a href="#测试自动化" class="headerlink" title="测试自动化"></a>测试自动化</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420083107803.png" alt="image-20220420083107803"></p><p>自动化测试脚本也是花时间花精力制作的，因此是否需要是要抉择的</p><h3 id="软件调试"><a href="#软件调试" class="headerlink" title="软件调试"></a>软件调试</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420083242155.png" alt="image-20220420083242155"></p><h3 id="软件评审"><a href="#软件评审" class="headerlink" title="软件评审"></a>软件评审</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420083611756.png" alt="image-20220420083611756"></p><p>评审需要客户参与进来，工具技术方法的合理性，管理过程，内容结果都是评审的要求</p><h3 id="验证与确认"><a href="#验证与确认" class="headerlink" title="验证与确认"></a>验证与确认</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420083857379.png" alt="image-20220420083857379"></p><p>验证是针对阶段产物，确认是针对最终产物</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220420084028099.png" alt="image-20220420084028099"></p><p>B</p><blockquote><p>即边界上的一个有效和一个无效值</p></blockquote><h3 id="软件过程改进-CMMI"><a href="#软件过程改进-CMMI" class="headerlink" title="软件过程改进 - CMMI"></a>软件过程改进 - CMMI</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421191623657.png" alt="image-20220421191623657"></p><p>软件测试是软件质量控制的手段。软件过程是通过把控过程减少错误的发生。</p><p><a href="https://baike.baidu.com/item/CMMI/449025?fr=aladdin">CMMI共有5个级别，代表软件团队能力成熟度的5个等级，数字越大，成熟度越高，高成熟度等级表示有比较强的软件综合开发能力。</a></p><p>混乱级 - 已管理级（项目） - 已定义级（公司、组织）- 定量管理级 - 优化级</p><h3 id="软件开发环境与工具"><a href="#软件开发环境与工具" class="headerlink" title="软件开发环境与工具"></a>软件开发环境与工具</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421193153541.png" alt="image-20220421193153541"></p><h2 id="系统运行与评价"><a href="#系统运行与评价" class="headerlink" title="系统运行与评价"></a>系统运行与评价</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421193352033.png" alt="image-20220421193352033"></p><h3 id="系统转换计划"><a href="#系统转换计划" class="headerlink" title="系统转换计划"></a>系统转换计划</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421193406709.png" alt="image-20220421193406709"></p><p>低价值：单个系统与其他系统的联系没有打通</p><p>继承和改造针对的是功能模型和数据模型，并不是说继承就是不变</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421193724395.png" alt="image-20220421193724395"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421194048627.png" alt="image-20220421194048627"></p><p>分段转换：一个一个子系统上线，一个一个模块更新（微服务）。</p><p>并行转换同时维护2套系统成本高</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421194438833.png" alt="image-20220421194438833"></p><h3 id="系统运行与维护"><a href="#系统运行与维护" class="headerlink" title="系统运行与维护"></a>系统运行与维护</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421194547682.png" alt="image-20220421194547682"></p><p>改正性维护（正确性维护）：测试期间未发现的BUG</p><p>适应性维护：环境变化</p><p>预防性维护：现在没有问题，将来可能存在问题，针对未来</p><p>完善性维护：增强功能或增强性能</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195307590.png" alt="image-20220421195307590"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195319425.png" alt="image-20220421195319425"></p><p>A D C</p><h3 id="系统审计"><a href="#系统审计" class="headerlink" title="系统审计"></a>系统审计</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195434690.png" alt="image-20220421195434690"></p><h3 id="系统评价"><a href="#系统评价" class="headerlink" title="系统评价"></a>系统评价</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195543866.png" alt="image-20220421195543866"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195603025.png" alt="image-20220421195603025"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421195617635.png" alt="image-20220421195617635"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421200353554.png" alt="image-20220421200353554"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421200725407.png" alt="image-20220421200725407"></p><p>问题3提现的是软件维护的优先级</p><p>问题4：放弃重用，采取重构</p><p><strong>答案：</strong></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421200855571.png" alt="image-20220421200855571"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220421200910140.png" alt="image-20220421200910140"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】6. 系统设计</title>
    <link href="http://www.ionluo.cn/blog/posts/9629492a.html"/>
    <id>http://www.ionluo.cn/blog/posts/9629492a.html</id>
    <published>2022-05-23T02:34:57.467Z</published>
    <updated>2022-06-10T09:03:44.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容概要"><a href="#课程内容概要" class="headerlink" title="课程内容概要"></a>课程内容概要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417102004871.png" alt="image-20220417102004871"></p><h2 id="处理流程设计"><a href="#处理流程设计" class="headerlink" title="处理流程设计"></a>处理流程设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417102112869.png" alt="image-20220417102112869"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417102235588.png" alt="image-20220417102235588"></p><p><em>主要记高亮标识部分</em></p><h2 id="软件架构设计"><a href="#软件架构设计" class="headerlink" title="软件架构设计"></a>软件架构设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417102355286.png" alt="image-20220417102355286"></p><p>架构设计主要位于需求分析和软件设计之间</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417112145152.png" alt="image-20220417112145152"></p><p>管道过滤器：参考代码实现的vue的过滤器，过滤器的输出可以作为其他过滤器的输入，依次进行。</p><p>黑板系统：语音处理，信号处理。</p><blockquote><p>以语音数据为例子，不停地进行数据转化，然后擦掉已经不用的数据。声音数据转化成文字数据，再转化成语音数据</p></blockquote><h2 id="结构化设计"><a href="#结构化设计" class="headerlink" title="结构化设计"></a>结构化设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417113052072.png" alt="image-20220417113052072"></p><p>概要设计：拆分系统，抽象成模块，管模块间的交互与衔接。主要思想是抽象化….模块独立</p><p>详细设计：单个模块的内部设计</p><p>扇入，扇出分别指模块的入度和出度（以树结构举例）</p><p>单入口，单出口分别指模块的调用入口和结果出口</p><h2 id="面向对象设计"><a href="#面向对象设计" class="headerlink" title="面向对象设计"></a>面向对象设计</h2><h3 id="基本过程"><a href="#基本过程" class="headerlink" title="基本过程"></a>基本过程</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417114035655.png" alt="image-20220417114035655"></p><p>用例建模、分析建模</p><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417114159191.png" alt="image-20220417114159191"></p><p>子类可以替换父类：子类拥有父类的所有职能，这种时候可以子类代替父类。但是有的时候会打破这一原则，比如子类做了方法的重写，因此不推荐重写父类方法，或者重写保证入参有更宽松的入口范文且函数输出有更狭窄的输出范围（即不影响父类的方法，子类的实现是父类功能的一个超集）。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417115028014.png" alt="image-20220417115028014"></p><p>AB</p><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><blockquote><p>更详细的见：<a href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html">https://www.runoob.com/design-pattern/design-pattern-tutorial.html</a></p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417115403133.png" alt="image-20220417115403133"></p><p>惯用法与设计模式的差异在于和程序设计语言相关</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417115728013.png" alt="image-20220417115728013"></p><h4 id="创建型模式"><a href="#创建型模式" class="headerlink" title="创建型模式"></a>创建型模式</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417121133277.png" alt="image-20220417121133277"></p><p><strong>抽象工厂模式何时使用：</strong>系统的产品有多于一个的产品族，而系统只消费其中某一族的产品。</p><h4 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a>结构型模式</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417122153828.png" alt="image-20220417122153828"></p><p>适配器模式是结构型模式的始祖。</p><p>享元模式类似活字印刷</p><h4 id="行为型模式"><a href="#行为型模式" class="headerlink" title="行为型模式"></a>行为型模式</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417124722083.png" alt="image-20220417124722083"></p><p>中介者和代理的差异类似交换机和路由器的关系。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417125542330.png" alt="image-20220417125542330"></p><p>备忘录模式的速记关键字是 游戏存档</p><p>观察者模式又称为 观察-订阅模式</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417130018993.png" alt="image-20220417130018993"></p><p>A（装饰模式本质上是希望一个功能可以不断补充）</p><p>B</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417143806834.png" alt="image-20220417143806834"></p><p>AB</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417143858688.png" alt="image-20220417143858688"></p><p>ABB</p><h2 id="人机界面设计"><a href="#人机界面设计" class="headerlink" title="人机界面设计"></a>人机界面设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417143938320.png" alt="image-20220417143938320"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417144222344.png" alt="image-20220417144222344"></p><p>A</p><h2 id="Web应用设计"><a href="#Web应用设计" class="headerlink" title="Web应用设计"></a>Web应用设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417144242136.png" alt="image-20220417144242136"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418205619582.png" alt="image-20220418205619582"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418205805257.png" alt="image-20220418205805257"></p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418210150209.png" alt="image-20220418210150209"></p><p>session存入客户端或者session存入一台专门的服务器</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418210224499.png" alt="image-20220418210224499"></p><p>DNS：域名解析来负载均衡，比如通过DNS区分国内国外的流量进行分流</p><p><a href="https://blog.csdn.net/weixin_42442713/article/details/80909876">NAT</a>：通过建立ip地址和端口号的映射进行</p><p>DNS和NAT的方式无法用动态算法进行负载均衡，如果要动态的话一般通过软件如Nginx进行处理</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418211924363.png" alt="image-20220418211924363"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418212000224.png" alt="image-20220418212000224"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418212111809.png" alt="image-20220418212111809"></p><h3 id="数据库读写分离化"><a href="#数据库读写分离化" class="headerlink" title="数据库读写分离化"></a>数据库读写分离化</h3><p>主从库，读写分离：一个主库，多个从库。主库负责写，从库负责读，主库写入后通过某种机制同步到从库中。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418212138641.png" alt="image-20220418212138641"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418212346526.png" alt="image-20220418212346526"></p><p>我们平时的项目比较出名的还有Redis</p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418224906191.png" alt="image-20220418224906191"></p><p>CDN &gt; 国家骨干网 &gt; 普通网络线路</p><h3 id="XML和JSON"><a href="#XML和JSON" class="headerlink" title="XML和JSON"></a>XML和JSON</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225229265.png" alt="image-20220418225229265"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225527774.png" alt="image-20220418225527774"></p><h3 id="web应用服务器"><a href="#web应用服务器" class="headerlink" title="web应用服务器"></a>web应用服务器</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225618656.png" alt="image-20220418225618656"></p><h3 id="缓存技术"><a href="#缓存技术" class="headerlink" title="缓存技术"></a>缓存技术</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225708432.png" alt="image-20220418225708432"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225724431.png" alt="image-20220418225724431"></p><h3 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225846487.png" alt="image-20220418225846487"></p><h3 id="响应式web设计"><a href="#响应式web设计" class="headerlink" title="响应式web设计"></a>响应式web设计</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418225953664.png" alt="image-20220418225953664"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】5. 需求工程</title>
    <link href="http://www.ionluo.cn/blog/posts/bb6b18c8.html"/>
    <id>http://www.ionluo.cn/blog/posts/bb6b18c8.html</id>
    <published>2022-05-23T02:34:57.466Z</published>
    <updated>2022-06-10T09:03:44.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409111747882.png" alt="image-20220409111747882"></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409143336226.png" alt="image-20220409143336226"></p><p>需求基线：经过确认的计划</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409143939789.png" alt="image-20220409143939789"></p><blockquote><p>B</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409144028134.png" alt="image-20220409144028134"></p><blockquote><p>B</p></blockquote><h2 id="需求分类"><a href="#需求分类" class="headerlink" title="需求分类"></a>需求分类</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409144113244.png" alt="image-20220409144113244"></p><blockquote><p>软件需求、硬件需求、网络需求</p></blockquote><p>用户需求是偏操作的需求，系统需求是系统的界面，实现等的需求。</p><p>非功能需求：如性能需求、安全性、可靠性</p><p>设计约束：开发语言约束、信创等</p><p>兴奋需求从项目管理上来说是坚决不要做的，会消耗项目资源也不一定可以提高客户满意度。如何区分期望需求和兴奋需求，这就需要通过原型来挖掘客户的需求。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409145204627.png" alt="image-20220409145204627"></p><blockquote><p>性能指标：响应时间，吞吐率等可量化的指标，因此这里可以排除性能指标</p><p>1是一个用户操作角度的描述，因此是用户需求</p><p>2的前半部分（显示提供替换词的对话框）是用户操作角度的描述，看上去是用户需求，但是后半部分是功能的描述，因此这里看做是一个功能需求</p><p>3是最笼统的描述，表明业务需要，因此是业务需求（抽象层次最高）</p><p>  BCA</p></blockquote><h2 id="需求获取"><a href="#需求获取" class="headerlink" title="需求获取"></a>需求获取</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220409150546469.png" alt="image-20220409150546469">用户访谈：开放式问题（案例、论文） 与 封闭式（选择题） 问题相结合</p><p>联合需求计划：会议形式获取需求，因此成本较高</p><p>情节串联法：原型</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412083116688.png" alt="image-20220412083116688"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412083346918.png" alt="image-20220412083346918"></p><p>用户访谈或联合需求计划（会议）或问卷调查，故选C</p><p>现场观摩或参加业务实践，故选D</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412083614863.png" alt="image-20220412083614863"></p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>结构化需求分析：数据流图（DFD）、实体联系图（ER）</p><p>面向对象需求分析：UML、用例模型、类模型</p><h3 id="结构化需求分析"><a href="#结构化需求分析" class="headerlink" title="结构化需求分析"></a>结构化需求分析</h3><p>以数据流图为核心</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084130410.png" alt="image-20220412084130410"></p><h4 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084402501.png" alt="image-20220412084402501"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084424407.png" alt="image-20220412084424407"></p><p>分层数据流图，自顶向下，逐步分解求精 </p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084437631.png" alt="image-20220412084437631"></p><p>外部实体可以是一个外部系统，比如这里的培训部，辅导老师</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084839035.png" alt="image-20220412084839035"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412084858666.png" alt="image-20220412084858666"></p><p>父图与子图的平衡：指任何一张DFD子图边界上的输入/输出数据流必须与其父图对应加工的输入/输出保持一致。</p><p>子图内平衡：黑洞、奇迹、灰洞</p><p>1.加工只有输入没有输出，即黑洞</p><p>2.加工只有输出没有输入，即奇迹</p><p>3.加工输入不足以产生输出，即灰洞</p><blockquote><p>做题技巧：<a href="https://www.educity.cn/rk/2306467.html">https://www.educity.cn/rk/2306467.html</a></p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412125738863.png" alt="image-20220412125738863"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412125756260.png" alt="image-20220412125756260"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412125817733.png" alt="image-20220412125817733"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412125906264.png" alt="image-20220412125906264"></p><h4 id="状态转换图"><a href="#状态转换图" class="headerlink" title="状态转换图"></a>状态转换图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412130154701.png" alt="image-20220412130154701"></p><h4 id="实体联系-ER-图"><a href="#实体联系-ER-图" class="headerlink" title="实体联系(ER)图"></a>实体联系(ER)图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412130211416.png" alt="image-20220412130211416"></p><p>实体、联系。属性</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412130320283.png" alt="image-20220412130320283"></p><blockquote><p>A  A</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412130458529.png" alt="image-20220412130458529"></p><blockquote><p>A B</p></blockquote><h3 id="面向对象需求分析"><a href="#面向对象需求分析" class="headerlink" title="面向对象需求分析"></a>面向对象需求分析</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412130605680.png" alt="image-20220412130605680"></p><p>实体类：对应数据表，如学生表-学生-实体类</p><p>边界类：接口性质，跟外界打交道的</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412221518891.png" alt="image-20220412221518891"></p><blockquote><p>A  C</p></blockquote><h4 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220412221729629.png" alt="image-20220412221729629"></p><p>统一建模语言</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413074556900.png" alt="image-20220413074556900"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413074607407.png" alt="image-20220413074607407"></p><p>AD</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413075047248.png" alt="image-20220413075047248"></p><p>注意区分静态/动态图以及各自的特点 </p><p>定时图：定时任务  顺序图的时间顺序是相对的</p><p>重点考核用例图和类图</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413080159872.png" alt="image-20220413080159872"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413080701546.png" alt="image-20220413080701546"></p><p>包含关系和扩展关系可以笼统的概括为依赖关系。</p><p>包含关系在UML1.0又称为使用关系</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413081432441.png" alt="image-20220413081432441"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413220439071.png" alt="image-20220413220439071"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413220541104.png" alt="image-20220413220541104"></p><blockquote><p>D</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413220709197.png" alt="image-20220413220709197"></p><p>使用关系 === 包含关系  </p><p>include(包含)  extend(扩展)  generalize(泛化) call(调用)</p><p>李氏替换原则：子类可以替换父类（因为 子类拥有父类的所有功能，因此可以用子类替换父类）</p><p>依赖关系是类图中的关系，见《类图与对象图》章节</p><blockquote><p>D B C</p></blockquote><h4 id="类图与对象图"><a href="#类图与对象图" class="headerlink" title="类图与对象图"></a>类图与对象图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220413225849704.png" alt="image-20220413225849704"></p><p><img src="C:\Users\ion\AppData\Roaming\Typora\typora-user-images\image-20220414220749743.png" alt="image-20220414220749743"></p><p>泛化关系中的特殊/一般关系就是子类与父类的关系</p><p>聚合关系 - 汽车和轮子（轮子可以用到其他汽车上）</p><p>组合关系 - 公司与部门（部门是公司的一部分，不可分割）</p><p>实现关系：一个类可以实现多个接口（PPT图片里面上面的画错了，是下面的那种虚线箭头）</p><p>多重度表示2者的关系，一对多，一对一，多对一</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416152427902.png" alt="image-20220416152427902"></p><p>DC</p><h4 id="顺序图"><a href="#顺序图" class="headerlink" title="顺序图"></a>顺序图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416152728532.png" alt="image-20220416152728532"></p><h4 id="定时图"><a href="#定时图" class="headerlink" title="定时图"></a>定时图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220418230226455.png" alt="image-20220418230226455"></p><p>核心就是状态转换+时间因素</p><h4 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416152900311.png" alt="image-20220416152900311"></p><p>活动图的另外一种画法：泳道图</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153044397.png" alt="image-20220416153044397"></p><h4 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153226665.png" alt="image-20220416153226665"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153355309.png" alt="image-20220416153355309"></p><p>S1: 订单挂起  S2：订单备货   S3：订单定制  S4：订单发货  S5：订单收货</p><h4 id="通信图-协作图"><a href="#通信图-协作图" class="headerlink" title="通信图(协作图)"></a>通信图(协作图)</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153846453.png" alt="image-20220416153846453"></p><p>和顺序图类似，强调收发对象，不强调时间顺序</p><h4 id="构件图"><a href="#构件图" class="headerlink" title="构件图"></a>构件图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153931944.png" alt="image-20220416153931944"></p><h4 id="部署图"><a href="#部署图" class="headerlink" title="部署图"></a>部署图</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416153947541.png" alt="image-20220416153947541"></p><p>圆圈代表构建接口</p><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416154022964.png" alt="image-20220416154022964"></p><p>AB</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416154141396.png" alt="image-20220416154141396"></p><p>排除所有静态图，故选B</p><p>活动图和结构化里面的程序流程图是一样的一种结构，因此用来描述算法流程是合适的，故选A</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416154521440.png" alt="image-20220416154521440"></p><p>CDA</p><h2 id="需求建模"><a href="#需求建模" class="headerlink" title="需求建模"></a>需求建模</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416154637783.png" alt="image-20220416154637783"></p><p>细化用例模型如下图：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416155155368.png" alt="image-20220416155155368"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416155329284.png" alt="image-20220416155329284"></p><p>C</p><blockquote><p>判断哪些工作归属分析阶段，哪些工作归属于设计阶段</p></blockquote><p>B</p><blockquote><p>系统范围之外的名词可以删除，只考虑系统范围内</p><p>不具备独特行为的名词可以删除，这个没有解释，我的理解是系统内没有行为或行为单一的部分，如图书管理系统的图书管理员</p><p>一个对象的同义词可以删除，冗余</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416160628946.png" alt="image-20220416160628946"></p><p>C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416160728465.png" alt="image-20220416160728465"></p><p>A D</p><blockquote><p>需求包括业务层级、系统层级、用户层级。我们会通过需求分析得到系统的功能和非功能层级的需求</p><p>数据流（未处理的）、信息流（加工处理后的）、控制流</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416161357656.png" alt="image-20220416161357656"></p><p>D</p><blockquote><p>框架的范围比类大</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416161746332.png" alt="image-20220416161746332"></p><p><strong>做题思路：先看问题，再看试题题干说明</strong></p><blockquote><p>什么样的事物可以充当参与者？</p><p>人、组织、外部系统、时间等系统的触发因素</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416162827665.png" alt="image-20220416162827665"></p><p>用例图的绘制如下：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416163042019.png" alt="image-20220416163042019"></p><h2 id="需求定义"><a href="#需求定义" class="headerlink" title="需求定义"></a>需求定义</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220416163131577.png" alt="image-20220416163131577"></p><p>严格定义法：瀑布模型的思想</p><p>软件需求规格说明书（SRS）：需求定义的产生物</p><h2 id="需求验证"><a href="#需求验证" class="headerlink" title="需求验证"></a>需求验证</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417090449113.png" alt="image-20220417090449113"></p><blockquote><p>课外知识：合同是有多种类型的，如固定总价、成本补偿等。国内主流的合同类型是固定总价，只适用于需求明确的项目，对于现在主流的需求都是较难明确下来的，因此留下了隐患。对于客户不签字确认的情况，需要事前做好会议纪要，需求规格说明书以及确认验收标准等方式尽量规避。</p></blockquote><h2 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h2><h3 id="定义需求基线"><a href="#定义需求基线" class="headerlink" title="定义需求基线"></a>定义需求基线</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417091648495.png" alt="image-20220417091648495"></p><p>完成需求验证会形成需求基线</p><p>上面是一个需求状态变迁图2</p><h3 id="需求跟踪"><a href="#需求跟踪" class="headerlink" title="需求跟踪"></a>需求跟踪</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417092108404.png" alt="image-20220417092108404"></p><p>用例是用于系统开发的，如果原始需求里面没有而用例里面有，说明这是一个兴奋需求，如果原始需求里面有而用例没有的话，说明这是一个遗漏的需求。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417093420986.png" alt="image-20220417093420986"></p><p>C</p><h3 id="需求风险管理"><a href="#需求风险管理" class="headerlink" title="需求风险管理"></a>需求风险管理</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417093529802.png" alt="image-20220417093529802"></p><p>SRS: 需求规格说明书</p><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417093654563.png" alt="image-20220417093654563"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417093727067.png" alt="image-20220417093727067"></p><p><strong>试题答案解析：</strong> </p><p><strong>问题1：</strong></p><p>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。</p><p> 流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。 </p><p>两者的区别主要包括：</p><p> (1) 数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。</p><p> (2) 数据流图展现系统的数据流；流程图展现系统的控制流。</p><p> (3) 数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。</p><p> (4) 数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理建模阶段。 </p><p><strong>问题2：</strong> 如图所示的数据流图中存在的错误有以下4种： </p><p>(1) “分类训练”加工：只有输入没有输出，产生数据黑洞； </p><p>(2) “分类处理”加工：只有输出没有输入，无中生有；</p><p> (3) “规则文件”数据流：外部实体没有经过加工处理，直接到数据存储; </p><p>(4) “配置信息”数据流：外部实体之间没有加工处理，存在直接数据流。  <img src="http://www.comeonstudy.com/static/images/rktk/b07e22915e0e57e90498270091d96a33.jpg" alt="b07e22915e0e57e90498270091d96a33.jpg">  </p><p><strong>问题3：</strong> 髙质量数据流图设计时应考虑的三个原则： </p><p>(1) 复杂性最小化原则。DFD（数据流图）分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详细的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考査。</p><p> (2) 接口最小化原则。接口最小化是复杂性最小化的一种具体规则，在设计模型时，应使得模型中各个元素之间的接口数或连接数最小化。</p><p> (3) 数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别？是否存在有数据流出但没有相应的数据流入的加工？是否存在有数据流入但没有相应的数据流出的加工？ </p><blockquote><p>参考答案摘自：<a href="http://www.comeonstudy.com/detail/40854/">http://www.comeonstudy.com/detail/40854/</a></p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417100346533.png" alt="image-20220417100346533"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417100049374.png" alt="image-20220417100049374"></p><p>问题3见<code>需求获取</code>章节</p><p><strong>试题答案解析：</strong> </p><p><strong>【问题1】</strong></p><p>答：联合需求计划(JRP)是一个通过高度组织的群体会议来分析企业内的问题并获取需求的过程，它是由企业主管部门经理、会议主持人、用户、协调人员、IT人员、秘书等共同组成的专题讨论组来分析、讨论问题并定义系统需求。</p><p>JRP和其他需求获取方法相比的优势：</p><p>(1)发挥用户和管理人员参与系统幵发过程的积极性，提高系统开发效率：</p><p>(2)降低了系统需求获取的时间成本，加速系统开发周期；</p><p>(3)采用原型确认系统需求并获取设计审批，具有原型化开发方法的优点。</p><p><strong>【问题2】</strong></p><p>答：（a）文档分析或实地观察 （b）用户访谈或联合需求计划</p><p>（c）用户访谈或联合需求计划（d）问卷调査或文档分析（前面有多种人员，后面是文档）</p><p>（e）联合需求计划 （f）联合需求计划（看题干感觉问卷调查似乎更合理，只能说题干不清晰吧，如果人数过多，JRP就不适合了）</p><p>【问题3】</p><p>答：样本数量=0.25*(可信度因子/可接受误差)2</p><p>所以，抽取的样本数量=0.25*(1.645/0.1)2≈68份。</p><p>历年考到的需求分析的知识点</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220417101148525.png" alt="image-20220417101148525"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】22. 论文</title>
    <link href="http://www.ionluo.cn/blog/posts/60c33c22.html"/>
    <id>http://www.ionluo.cn/blog/posts/60c33c22.html</id>
    <published>2022-05-23T02:34:57.424Z</published>
    <updated>2022-06-10T09:03:44.807Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这里和第11章有重合，这里只记录对11章的补充</p></blockquote><h2 id="考点分析"><a href="#考点分析" class="headerlink" title="考点分析"></a>考点分析</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522230729827.png" alt="image-20220522230729827"></p><h2 id="历年考试情况"><a href="#历年考试情况" class="headerlink" title="历年考试情况"></a>历年考试情况</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522230755224.png" alt="image-20220522230755224"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522230815038.png" alt="image-20220522230815038"></p><h2 id="论文写作分析"><a href="#论文写作分析" class="headerlink" title="论文写作分析"></a>论文写作分析</h2><h3 id="试题1"><a href="#试题1" class="headerlink" title="试题1"></a>试题1</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231834167.png" alt="image-20220522231834167"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231849827.png" alt="image-20220522231849827"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231906015.png" alt="image-20220522231906015"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231934744.png" alt="image-20220522231934744"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231951928.png" alt="image-20220522231951928"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522231959230.png" alt="image-20220522231959230"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232034648.png" alt="image-20220522232034648"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232111817.png" alt="image-20220522232111817"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232143518.png" alt="image-20220522232143518"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232201295.png" alt="image-20220522232201295"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232243736.png" alt="image-20220522232243736"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232303464.png" alt="image-20220522232303464"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232318533.png" alt="image-20220522232318533"></p><h3 id="试题2"><a href="#试题2" class="headerlink" title="试题2"></a>试题2</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232456441.png" alt="image-20220522232456441"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232523453.png" alt="image-20220522232523453"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232551408.png" alt="image-20220522232551408"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232612408.png" alt="image-20220522232612408"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232628231.png" alt="image-20220522232628231"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232647770.png" alt="image-20220522232647770"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232716671.png" alt="image-20220522232716671"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232724925.png" alt="image-20220522232724925"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232804383.png" alt="image-20220522232804383"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232830768.png" alt="image-20220522232830768"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232847648.png" alt="image-20220522232847648"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522232902326.png" alt="image-20220522232902326"></p><h3 id="试题3"><a href="#试题3" class="headerlink" title="试题3"></a>试题3</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233026223.png" alt="image-20220522233026223"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233057511.png" alt="image-20220522233057511"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233117174.png" alt="image-20220522233117174"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233128191.png" alt="image-20220522233128191"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233157456.png" alt="image-20220522233157456"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233221598.png" alt="image-20220522233221598"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233316536.png" alt="image-20220522233316536"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233408189.png" alt="image-20220522233408189"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233435752.png" alt="image-20220522233435752"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233441310.png" alt="image-20220522233441310"></p><h3 id="试题4"><a href="#试题4" class="headerlink" title="试题4"></a>试题4</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233515855.png" alt="image-20220522233515855"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233541806.png" alt="image-20220522233541806"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233550266.png" alt="image-20220522233550266"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233629942.png" alt="image-20220522233629942"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233644758.png" alt="image-20220522233644758"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233700360.png" alt="image-20220522233700360"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233750391.png" alt="image-20220522233750391"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233803566.png" alt="image-20220522233803566"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233833519.png" alt="image-20220522233833519"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233859737.png" alt="image-20220522233859737"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233918151.png" alt="image-20220522233918151"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233929944.png" alt="image-20220522233929944"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522233949342.png" alt="image-20220522233949342"></p><h3 id="试题5"><a href="#试题5" class="headerlink" title="试题5"></a>试题5</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522234135303.png" alt="image-20220522234135303"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522234201343.png" alt="image-20220522234201343"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522234223960.png" alt="image-20220522234223960"></p><p>合格范文</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522234255543.png" alt="image-20220522234255543"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522234337150.png" alt="image-20220522234337150"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】21. 案例分析</title>
    <link href="http://www.ionluo.cn/blog/posts/caa0fe23.html"/>
    <id>http://www.ionluo.cn/blog/posts/caa0fe23.html</id>
    <published>2022-05-23T02:34:57.423Z</published>
    <updated>2022-06-10T09:03:44.812Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这里和第9章有重合，复习以该章为准</p></blockquote><p>高分难 90分钟 3道题 心态重要</p><h2 id="考点分析"><a href="#考点分析" class="headerlink" title="考点分析"></a>考点分析</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522214923035.png" alt="image-20220522214923035"></p><p>系统计划（系统规划）</p><h2 id="系统计划"><a href="#系统计划" class="headerlink" title="系统计划"></a>系统计划</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215141137.png" alt="image-20220522215141137"></p><p>重点：可行性研究与效益分析、遗留系统的评价和处理策略</p><h2 id="系统获取与分析"><a href="#系统获取与分析" class="headerlink" title="系统获取与分析"></a>系统获取与分析</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215222873.png" alt="image-20220522215222873"></p><p>需求获取的方法、面向对象分析。结构化分析</p><h2 id="系统分析"><a href="#系统分析" class="headerlink" title="系统分析"></a>系统分析</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215311009.png" alt="image-20220522215311009"></p><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215352481.png" alt="image-20220522215352481"></p><h2 id="文档编制和沟通能力"><a href="#文档编制和沟通能力" class="headerlink" title="文档编制和沟通能力"></a>文档编制和沟通能力</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215531563.png" alt="image-20220522215531563"></p><p>很少考</p><h2 id="系统运行与维护"><a href="#系统运行与维护" class="headerlink" title="系统运行与维护"></a>系统运行与维护</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215602153.png" alt="image-20220522215602153"></p><h2 id="软件过程改进和系统开发项目管理"><a href="#软件过程改进和系统开发项目管理" class="headerlink" title="软件过程改进和系统开发项目管理"></a>软件过程改进和系统开发项目管理</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522215651137.png" alt="image-20220522215651137"></p><h2 id="企业信息化战略与实施"><a href="#企业信息化战略与实施" class="headerlink" title="企业信息化战略与实施"></a>企业信息化战略与实施</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522220632299.png" alt="image-20220522220632299"></p><p>集成技术的应用 EAI</p><h2 id="试题讲解"><a href="#试题讲解" class="headerlink" title="试题讲解"></a>试题讲解</h2><h3 id="历年考点"><a href="#历年考点" class="headerlink" title="历年考点"></a>历年考点</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522220758409.png" alt="image-20220522220758409"></p><p>嵌入式不推荐选（虽然基本每次都会考），除非其他都不会</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522221407811.png" alt="image-20220522221407811"></p><h3 id="如何解答试题"><a href="#如何解答试题" class="headerlink" title="如何解答试题"></a>如何解答试题</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522221707970.png" alt="image-20220522221707970"></p><p>线索不仅仅在案例上1，也存在题干中</p><p>概念性问题最好自己总结出来，切记死记硬背</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522222231137.png" alt="image-20220522222231137"></p><h3 id="试题1"><a href="#试题1" class="headerlink" title="试题1"></a>试题1</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522222836346.png" alt="image-20220522222836346"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522222921961.png" alt="image-20220522222921961"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224522833.png" alt="image-20220522224522833"></p><p>答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224509426.png" alt="image-20220522224509426"></p><h3 id="试题2"><a href="#试题2" class="headerlink" title="试题2"></a>试题2</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224634593.png" alt="image-20220522224634593"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224718328.png" alt="image-20220522224718328"></p><p>答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224819567.png" alt="image-20220522224819567"></p><h3 id="试题3"><a href="#试题3" class="headerlink" title="试题3"></a>试题3</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224834808.png" alt="image-20220522224834808"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224847264.png" alt="image-20220522224847264"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522224934408.png" alt="image-20220522224934408"></p><p>答案：<a href="https://wenku.baidu.com/view/c9ae3dc082c758f5f61fb7360b4c2e3f572725f4.html">https://wenku.baidu.com/view/c9ae3dc082c758f5f61fb7360b4c2e3f572725f4.html</a></p><h3 id="试题4"><a href="#试题4" class="headerlink" title="试题4"></a>试题4</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225310072.png" alt="image-20220522225310072"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225326608.png" alt="image-20220522225326608"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225334831.png" alt="image-20220522225334831"></p><p>答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225424383.png" alt="image-20220522225424383"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225434642.png" alt="image-20220522225434642"></p><h3 id="试题5"><a href="#试题5" class="headerlink" title="试题5"></a>试题5</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225501208.png" alt="image-20220522225501208"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225516577.png" alt="image-20220522225516577"></p><p>答案：<img src="http://blog.cdn.ionluo.cn/blog/image-20220522225537008.png" alt="image-20220522225537008"></p><h3 id="试题6"><a href="#试题6" class="headerlink" title="试题6"></a>试题6</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225559953.png" alt="image-20220522225559953"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225613832.png" alt="image-20220522225613832"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225630127.png" alt="image-20220522225630127"></p><p>答案：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225650815.png" alt="image-20220522225650815"></p><h3 id="试题7"><a href="#试题7" class="headerlink" title="试题7"></a>试题7</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225711880.png" alt="image-20220522225711880"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225740912.png" alt="image-20220522225740912"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225802176.png" alt="image-20220522225802176"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522225825289.png" alt="image-20220522225825289"></p><p>答案：</p><p><a href="https://wangxiao.xisaiwang.com/tiku2/384038.html">https://wangxiao.xisaiwang.com/tiku2/384038.html</a></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】20. 数学与经济管理</title>
    <link href="http://www.ionluo.cn/blog/posts/e9757cdf.html"/>
    <id>http://www.ionluo.cn/blog/posts/e9757cdf.html</id>
    <published>2022-05-23T02:34:57.422Z</published>
    <updated>2022-06-10T09:03:44.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220520082720875.png" alt="image-20220520082720875"></p><h2 id="图论应用"><a href="#图论应用" class="headerlink" title="图论应用"></a>图论应用</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220520083004649.png" alt="image-20220520083004649"></p><p>n个节点只需要n-1条边就可以了，这里的最小生成树是：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220520084239619.png" alt="image-20220520084239619"></p><p>普利姆算法：从点出发找最小的边，然后把边连接的点作为一个集合点继续寻找最小的边。</p><p>克鲁斯卡尔算法：从边出发，找最小的边</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220520084305235.png" alt="image-20220520084305235"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220520084757288.png" alt="image-20220520084757288"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】19. 知识产权标准化</title>
    <link href="http://www.ionluo.cn/blog/posts/8551d6a3.html"/>
    <id>http://www.ionluo.cn/blog/posts/8551d6a3.html</id>
    <published>2022-05-23T02:34:57.421Z</published>
    <updated>2022-06-10T09:03:44.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205115383.png" alt="image-20220519205115383"></p><h2 id="保护范围与对象"><a href="#保护范围与对象" class="headerlink" title="保护范围与对象"></a>保护范围与对象</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205138274.png" alt="image-20220519205138274"></p><h2 id="保护期限"><a href="#保护期限" class="headerlink" title="保护期限"></a>保护期限</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205159334.png" alt="image-20220519205159334"></p><h2 id="知识产权人确定"><a href="#知识产权人确定" class="headerlink" title="知识产权人确定"></a>知识产权人确定</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205221315.png" alt="image-20220519205221315"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205248428.png" alt="image-20220519205248428"></p><h2 id="侵权判定"><a href="#侵权判定" class="headerlink" title="侵权判定"></a>侵权判定</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205325429.png" alt="image-20220519205325429"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205345614.png" alt="image-20220519205345614"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205408131.png" alt="image-20220519205408131"></p><p>B A</p><h2 id="标准化"><a href="#标准化" class="headerlink" title="标准化"></a>标准化</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205511756.png" alt="image-20220519205511756"></p><h3 id="标准的分类"><a href="#标准的分类" class="headerlink" title="标准的分类"></a>标准的分类</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205524336.png" alt="image-20220519205524336"></p><h2 id="标准的编号"><a href="#标准的编号" class="headerlink" title="标准的编号"></a>标准的编号</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519205616610.png" alt="image-20220519205616610"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】18. 系统安全分析与设计</title>
    <link href="http://www.ionluo.cn/blog/posts/5974807a.html"/>
    <id>http://www.ionluo.cn/blog/posts/5974807a.html</id>
    <published>2022-05-23T02:34:57.420Z</published>
    <updated>2022-06-10T09:03:44.804Z</updated>
    
    <content type="html"><![CDATA[<p>信息安全的内容，上午题必考，案列和论文偶尔会考</p><h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083927292.png" alt="image-20220519083927292"></p><h2 id="对称加密技术"><a href="#对称加密技术" class="headerlink" title="对称加密技术"></a>对称加密技术</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519084101208.png" alt="image-20220519084101208"></p><p>密钥是通用的，所以称之为对称机密</p><p>对于大篇幅明文，使用对称加密算法。通常在网络传输的时候使用，现在大多数的鉴权都是使用的该方式，如企业微信的鉴权。</p><p>3DES加密密钥是2*56=112位，IDEA算法则是128位</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519191327304.png" alt="image-20220519191327304"></p><p>公钥加密，私钥解密 （只有接收方可以读到信息）</p><p>私钥加签，公钥解签（发送者身份校验）</p><p>非对称加密由于加密速度慢，所以不适用在大量明文的情况下。密码通常就使用非对称加密</p><p>公钥加密通常用在客户端和服务端的通信，客户端公钥加密数据传输，保证数据的安全</p><p>私钥加签通常结合信息摘要，对摘要加签保证发送内容不可篡改，同时发送方也不可抵赖</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519192531266.png" alt="image-20220519192531266"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519192539928.png" alt="image-20220519192539928"></p><p>C</p><p>A - 56 * 2 = 112</p><p>B - 二次加密</p><h2 id="信息摘要"><a href="#信息摘要" class="headerlink" title="信息摘要"></a>信息摘要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519192641198.png" alt="image-20220519192641198"></p><p>摘要是对大段信息的提取</p><p>信息摘要一般与数字签名一起来用</p><p><a href="https://www.npmjs.com/package/crypto-sha">SHA</a></p><p>单向加密，不能反向解密</p><p>摘要作用：① 结合数字签名，让签名变得更简单 ② 摘要单向不可还原，可以防止被篡改</p><h2 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519193156289.png" alt="image-20220519193156289"></p><h2 id="数字信封"><a href="#数字信封" class="headerlink" title="数字信封"></a>数字信封</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519193525508.png" alt="image-20220519193525508"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519194208861.png" alt="image-20220519194208861"></p><p>D</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519194235323.png" alt="image-20220519194235323"></p><p>内容很大 - 对称加密</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519194738882.png" alt="image-20220519194738882"></p><p>由上面可知，加密解密技术单独使用都有缺陷，实际应用的时候通常都是结合使用</p><p>K是数字信封，这里虽然分了3次，但是实际上邮件和数字信封会一起传输</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519195436562.png" alt="image-20220519195436562"></p><p>C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519195539509.png" alt="image-20220519195539509"></p><p>C B</p><h2 id="PKI公钥体系"><a href="#PKI公钥体系" class="headerlink" title="PKI公钥体系"></a>PKI公钥体系</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519195728617.png" alt="image-20220519195728617"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519200232818.png" alt="image-20220519200232818"></p><h2 id="数字证书内容"><a href="#数字证书内容" class="headerlink" title="数字证书内容"></a>数字证书内容</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519200327102.png" alt="image-20220519200327102"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519200338098.png" alt="image-20220519200338098"></p><p>D</p><h2 id="信息系统安全"><a href="#信息系统安全" class="headerlink" title="信息系统安全"></a>信息系统安全</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519200454563.png" alt="image-20220519200454563"></p><p>数字证书有软件也有硬件级别的，比如U盾就是硬件级别的</p><p>自主访问控制: 我有什么权限，我就可以分配给其他人什么权限</p><p>访问控制列表：针对客体，即访问的对象分配可以访问的账号列表(如FTP可以针对一个文件夹设置哪些账号可以访问)</p><p>强制访问控制：针对主体和客体，给主体和客体分配权限</p><p>基于角色的访问控制：主体分组</p><p>基于任务的访问控制：在项目里面才有权限（gitlab）</p><h2 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519203049009.png" alt="image-20220519203049009"></p><p>IPSec：对IP数据包加密</p><p>防火墙：隔离外网和内网，防外不防内</p><p>SET：电子商务（线上支付）</p><p>HTTPS = HTTP + SSL（加密的超文本传输协议）</p><p>PGP：邮件加密协议</p><p><a href="https://so.csdn.net/so/search?q=%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE&spm=1001.2101.3001.7020">传输层协议</a>：TCP协议、UDP协议</p><p><a href="https://so.csdn.net/so/search?q=%E5%BA%94%E7%94%A8%E5%B1%82&spm=1001.2101.3001.7020">应用层</a>协议：FTP、HTTP、SMTP</p><p><a href="https://so.csdn.net/so/search?q=%E7%BD%91%E7%BB%9C%E5%B1%82&spm=1001.2101.3001.7020">网络层</a>协议：IP协议</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519203412364.png" alt="image-20220519203412364"></p><p>C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519203550271.png" alt="image-20220519203550271"></p><p>D</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519203709520.png" alt="image-20220519203709520"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519203916706.png" alt="image-20220519203916706"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204117870.png" alt="image-20220519204117870"></p><p>DOS：大量请求阻塞服务器响应导致系统宕机</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204252553.png" alt="image-20220519204252553"></p><p>D</p><h2 id="安全保护等级"><a href="#安全保护等级" class="headerlink" title="安全保护等级"></a>安全保护等级</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204328310.png" alt="image-20220519204328310"></p><h2 id="计算机病毒与木马"><a href="#计算机病毒与木马" class="headerlink" title="计算机病毒与木马"></a>计算机病毒与木马</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204420616.png" alt="image-20220519204420616"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204453553.png" alt="image-20220519204453553"></p><p>宏病毒（Office）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204539810.png" alt="image-20220519204539810"></p><p>C</p><h2 id="安全防范体系"><a href="#安全防范体系" class="headerlink" title="安全防范体系"></a>安全防范体系</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204613193.png" alt="image-20220519204613193"></p><p>DBMS：应用级，如果没有选项就选系统级</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519204754016.png" alt="image-20220519204754016"></p><p>C D</p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】17. 多媒体基础知识</title>
    <link href="http://www.ionluo.cn/blog/posts/8bd11fef.html"/>
    <id>http://www.ionluo.cn/blog/posts/8bd11fef.html</id>
    <published>2022-05-23T02:34:57.419Z</published>
    <updated>2022-06-10T09:03:44.791Z</updated>
    
    <content type="html"><![CDATA[<p>2分</p><h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082008604.png" alt="image-20220519082008604"></p><p>多媒体相关计算问题现在考的比较少，因此这里讲的较少</p><h2 id="音频相关概念"><a href="#音频相关概念" class="headerlink" title="音频相关概念"></a>音频相关概念</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082104356.png" alt="image-20220519082104356"></p><p>WAVE：保真度高，占用空间大</p><p>MP3：压缩的音频格式</p><p>MIDI：保存的音调，容量低，用来记录乐谱，不能记录人声</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082227750.png" alt="image-20220519082227750"></p><p>B C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082410268.png" alt="image-20220519082410268"></p><p>D (不清晰用排除法)</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082505202.png" alt="image-20220519082505202"></p><p>D </p><p>流媒体技术：边看边播视频</p><p>JPEG累进编码方式：图片由模糊变清晰</p><p>GIF图像文件格式：容量小</p><p>AD/DA变换方式：数(D)模(A)转换</p><h2 id="图像的相关概念"><a href="#图像的相关概念" class="headerlink" title="图像的相关概念"></a>图像的相关概念</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082805612.png" alt="image-20220519082805612"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082841318.png" alt="image-20220519082841318"></p><p>A C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519082859229.png" alt="image-20220519082859229"></p><p>A</p><p>矢量图记录的图源和轨迹，占有空间更小，但是因为要计算，显示速度较慢</p><p>位图记录的是像素点，比如有个1024x768的大小图片占用空间就是 <code>1024*768*8bit</code></p><h2 id="媒体的种类"><a href="#媒体的种类" class="headerlink" title="媒体的种类"></a>媒体的种类</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083048165.png" alt="image-20220519083048165"></p><p>注意区分表示媒体和表现媒体，<strong>表示是编码方式，表现是输入输出设备</strong></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083312209.png" alt="image-20220519083312209"></p><p>A B</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083256692.png" alt="image-20220519083256692"></p><p>A D</p><h2 id="数据压缩基础"><a href="#数据压缩基础" class="headerlink" title="数据压缩基础"></a>数据压缩基础</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083400019.png" alt="image-20220519083400019"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083526810.png" alt="image-20220519083526810"></p><p>记忆下无损编码就好了，除了无损压缩，其他都是有损压缩</p><h2 id="常见的多媒体标准"><a href="#常见的多媒体标准" class="headerlink" title="常见的多媒体标准"></a>常见的多媒体标准</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083612803.png" alt="image-20220519083612803"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220519083739379.png" alt="image-20220519083739379"></p><p>D D</p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】15. 计算机网络</title>
    <link href="http://www.ionluo.cn/blog/posts/53b0c6c9.html"/>
    <id>http://www.ionluo.cn/blog/posts/53b0c6c9.html</id>
    <published>2022-05-23T02:34:57.417Z</published>
    <updated>2022-06-10T09:03:44.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518193054661.png" alt="image-20220518193054661"></p><h2 id="TCP-IP协议族"><a href="#TCP-IP协议族" class="headerlink" title="TCP/IP协议族"></a>TCP/IP协议族</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518193337041.png" alt="image-20220518193337041"></p><p>速记：巫术忘传会飚鹰</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518193412815.png" alt="image-20220518193412815"></p><p>常考 DHCP DNS</p><p>HTTP + SSL = HTTPS (443)</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518200932234.png" alt="image-20220518200932234"></p><p>默认都是动态分配的，分配失败的话就会分配第6点的这种ip</p><p>169.254.X.X (Windows)</p><p>0.0.0.0(Linux)</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518201210697.png" alt="image-20220518201210697"></p><p>根域名服务器负担重，效率低，故较少采用</p><p>除了向本地域名服务器查询使用递归查询，其他通常都采用迭代查询,。但是做题的时候需要根据题目中的线段方向来判断，如下题。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518201629046.png" alt="image-20220518201629046"></p><p>A</p><h2 id="网络故障诊断"><a href="#网络故障诊断" class="headerlink" title="网络故障诊断"></a>网络故障诊断</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518201856060.png" alt="image-20220518201856060"></p><p>telnet lsof</p><h2 id="网络规划与设计"><a href="#网络规划与设计" class="headerlink" title="网络规划与设计"></a>网络规划与设计</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202118257.png" alt="image-20220518202118257"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202206481.png" alt="image-20220518202206481"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202220400.png" alt="image-20220518202220400"></p><p>主要考逻辑网络设计和物理网络设计</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202353767.png" alt="image-20220518202353767"></p><p>逻辑网络设计图、IP地址方案（△）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202556360.png" alt="image-20220518202556360"></p><p>设备和部件的详细列表清单（△）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202651680.png" alt="image-20220518202651680"></p><p>A B</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518202748962.png" alt="image-20220518202748962"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518203010355.png" alt="image-20220518203010355"></p><p>D</p><h2 id="网络接入技术"><a href="#网络接入技术" class="headerlink" title="网络接入技术"></a>网络接入技术</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518203055367.png" alt="image-20220518203055367"></p><p>时分多址（TD-SCDMA）、频分多址（FDD-LTE）</p><h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518204031160.png" alt="image-20220518204031160"></p><p>IPv4地址长度为32位 2^5</p><p>应用较少，主要应用软件支持较少</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518204310845.png" alt="image-20220518204310845"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518204413692.png" alt="image-20220518204413692"></p><p>IPv6地址合法性考查  略写</p><p>冒号区分段，2个冒号中间都是0的话可以省略0，连续出现2个以上的冒号可以省略成1个冒号但是只能省略一次</p><p>双协议栈技术：同时支持IPv4和IPv6</p><p>隧道技术：在IPv4中部署隧道实现IPv6业务的承载</p><p>NAT-PT技术：使用网关设备连接IPv4和IPv6，实现谢欢的转换翻译和映射</p><h2 id="综合布线系统"><a href="#综合布线系统" class="headerlink" title="综合布线系统"></a>综合布线系统</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518205225817.png" alt="image-20220518205225817"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518205435950.png" alt="image-20220518205435950"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518205451797.png" alt="image-20220518205451797"></p><p>D</p><h2 id="物联网"><a href="#物联网" class="headerlink" title="物联网"></a>物联网</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518205613728.png" alt="image-20220518205613728"></p><p>核心和基础依旧是互联网，不同的主要是物体信息的采集（感知层）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518205939460.png" alt="image-20220518205939460"></p><p>门禁卡、遥控器、饭卡等</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518210047379.png" alt="image-20220518210047379"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518210123512.png" alt="image-20220518210123512"></p><p>D</p><h2 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518210147397.png" alt="image-20220518210147397"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518210641798.png" alt="image-20220518210641798"></p><p>A</p><h2 id="练习题（这里待补充）"><a href="#练习题（这里待补充）" class="headerlink" title="练习题（这里待补充）"></a>练习题（这里待补充）</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518210912964.png" alt="image-20220518210912964"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】14. 数据库系统</title>
    <link href="http://www.ionluo.cn/blog/posts/79d4efca.html"/>
    <id>http://www.ionluo.cn/blog/posts/79d4efca.html</id>
    <published>2022-05-23T02:34:57.416Z</published>
    <updated>2022-06-10T09:03:44.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="https://blog.cdn.ionluo.cn/blog/image-20220506082607944.png" alt="image-20220506082607944"></p><h2 id="三级模式-两层映射"><a href="#三级模式-两层映射" class="headerlink" title="三级模式-两层映射"></a>三级模式-两层映射</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220506082935645.png" alt="image-20220506082935645"></p><p>外模式又称为用户模式，概念模式又称为模式，内模式又称为物理模式/存储模式</p><p>外模式-&gt;模式（逻辑独立性） 模式-&gt;内模式（物理独立性）</p><p>代表：MySQL，Oracle等</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220506083506863.png" alt="image-20220506083506863"></p><p>C</p><h2 id="数据库设计过程"><a href="#数据库设计过程" class="headerlink" title="数据库设计过程"></a>数据库设计过程</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220506083654219.png" alt="image-20220506083654219"></p><p>虚线代表的是阶段产物</p><p>物理设计得到的是一些东西，并没有什么输出，如索引，存储</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220506084253987.png" alt="image-20220506084253987"></p><p>AC</p><h2 id="E-R模型"><a href="#E-R模型" class="headerlink" title="E-R模型"></a>E-R模型</h2><p>实体(E)-关系(R)图</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220506084454762.png" alt="image-20220506084454762"></p><p>简单属性(不可再分) 复合属性(可再分) 派生属性(可以根据其他属性推导得到)</p><p>弱实体：不能独自存在的实体，如邮件附件存在则邮件必须存在</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512184741427.png" alt="image-20220512184741427"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512185207257.png" alt="image-20220512185207257"></p><p>C</p><blockquote><p>多对多只能单独做关系模式（表）</p></blockquote><h2 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512185625208.png" alt="image-20220512185625208"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512185838923.png" alt="image-20220512185838923"></p><blockquote><p>笛卡尔积得到结果数量是2者相乘，比如这里是 <code>3*3</code> 的2个表格，得到的笛卡尔积表格的大小是 <code>6*6</code> 大小的表格</p><p>投影：垂直方向的选择 （select Sno, Sname from S1）<br>选择：水平方向的选择 （select * from S1 where Sno=No0003）</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512190741151.png" alt="image-20220512190741151"></p><p>自然连接，针对相同属性列来的，相同属性列取值相等的元组</p><p>自然连接的笛卡尔积的等价表示：对笛卡尔积先选择后投影</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512192207568.png" alt="image-20220512192207568"></p><blockquote><p>倒V: 且 ， V: 或</p><p>对R和S的笛卡尔积先进行C和D的选择，再对ABCDE的投影，因此很明显就是一个自然连接，选A</p></blockquote><h2 id="规范化理论"><a href="#规范化理论" class="headerlink" title="规范化理论"></a>规范化理论</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512192345462.png" alt="image-20220512192345462"></p><h3 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512192819644.png" alt="image-20220512192819644"></p><p>C对AB有部分函数依赖（AB-&gt;C且A-&gt;C）</p><p>C对A有传递函数依赖（A-&gt;B且B-&gt;C）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512193027709.png" alt="image-20220512193027709"></p><p>候选键可以是一个，也可以是多个</p><p>候选键可以是单属性，也可以是多属性组合</p><blockquote><p>这里举个例子，银行系统候选键可以有客户编号和身份证号，但是客户编号和身份证号不能组合作为候选键，因为这样子就是冗余了。</p></blockquote><p>外键是其他关系的主键，并且不是本关系的候选键</p><h3 id="求候选键"><a href="#求候选键" class="headerlink" title="求候选键"></a>求候选键</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512193507929.png" alt="image-20220512193507929"></p><ol><li><p>画一个 A-&gt;B， B-&gt;C 的图根据上面的方法可以确定A这个入度为0且能遍历图中所有结点的属性是候选键</p></li><li><p>在上面的图中增加一个没有任何入度和出度4的结点D，该结点与A即构成候选键组合（A,D）</p></li></ol><blockquote><p>这里注意一种特殊的情况，如A-&gt;B, B-&gt;A，这样子B和A都可以遍历全图，但是B和A都不是入度为0的结点，可以把A和B看做一个结点，这样子这个结点就是入度为0了，如果组合结点可以遍历全图，则A和B都是候选键</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512194039597.png" alt="image-20220512194039597"></p><p>例1：A </p><p>例2：(A,B,C,D)</p><p>例3：B </p><blockquote><p>这里需要了解到 C可以推导出J（C-&gt;J），则ABCD-&gt;J</p></blockquote><h3 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512195218661.png" alt="image-20220512195218661"></p><p>消除非规范化的关系模式，解决插入异常、删除异常、更新异常、数据冗余的问题</p><p>候选码对应的属性称之为主属性，包括候选码组合的属性也都是主属性</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512200201193.png" alt="image-20220512200201193"></p><p>去掉高级职称人数的属性即可（拆分属性）</p><p>第一范式的处理方法很简单粗暴：拆分/拆表，就是拆。对于部分函数依赖，拆。对于传递函数依赖，拆。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512200358372.png" alt="image-20220512200358372"></p><p>B D</p><blockquote><p>多值属性：家庭成员，包含多个值（职工亲属不仅仅是一个）</p><p>派生属性：计算可以得到的属性</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220512200850153.png" alt="image-20220512200850153"></p><p>这是一个选课表。候选键是（学号，课程号），存在非主属性（学分）对主属性（课程号）的部分函数依赖。</p><p>解决方案：把[课程号，学分]放到另外一个表里面，这样子现在的表就只有[学号，课程号，成绩]，课程号作为外键</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220513082957308.png" alt="image-20220513082957308"></p><p>这是一个学生表，候选键是学号。这里学号-&gt;系号-&gt;系名，学号-&gt;系号-&gt;系位置，因此存在非主属性(系名/系位置)传递依赖与候选码(学号)</p><p>解决方法：把[系号,系名,系位置]放到另外一个表里面，这样子现在的表就只有[学号，姓名，系号]，课程号作为外键</p><blockquote><p>△：当没有满足第三范式的时候，都会存在数据冗余、更新异常、插入异常、删除异常</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220513083854831.png" alt="image-20220513083854831"></p><p>修正后的第三范式</p><p>这里候选码是 (S,J) 和 (T,S)，因为(S,J)-&gt;T, T-&gt;J, T部分依赖于候选码，T的决定因素不包括R的候选码</p><p>设计数据库一般不使用BC范式，分解太细了</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516192822549.png" alt="image-20220516192822549"></p><p>C</p><blockquote><p>根据问题来看，这里并没有部分函数依赖又不满足第三范式，那就是没有消除非主属性对码的传递函数依赖</p></blockquote><p>D 部门和职工是一对多，因此要在职工表上面修改</p><p>A</p><blockquote><p>只有日期、单价（根据表2，商品号-&gt;单价）和数量才能算出月销售额</p></blockquote><h3 id="无损分解"><a href="#无损分解" class="headerlink" title="无损分解"></a>无损分解</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516193657009.png" alt="image-20220516193657009"></p><p>如果有冗余依赖，一定要先去掉冗余，再来判断</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516194032332.png" alt="image-20220516194032332"></p><p>例1：保持了。R1包含了A和B的关系，R2包含了B和C的关系</p><p>例2：保持了。这里存在冗余函数依赖A-&gt;C，因此可以去掉。</p><p>判断是否无损分解有3种方法：</p><ul><li>自然连接法</li><li>表格法</li><li>公式法</li></ul><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516194305313.png" alt="image-20220516194305313"></p><p>是无损分解</p><blockquote><p>自然连接法</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516194451329.png" alt="image-20220516194451329"></p><p> <img src="http://blog.cdn.ionluo.cn/blog/image-20220516194702137.png" alt="image-20220516194702137"></p><p>将X改成√的前提是需要决定因素是√，那么被决定因素就可以的X就可以打成√了</p><blockquote><p>表格法</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516194913679.png" alt="image-20220516194913679"></p><p>第一个是无损，第二个是有损</p><blockquote><p>公式法。只适用于关系模式分解为2个关系模式的情况</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516195248567.png" alt="image-20220516195248567"></p><p>C 根据入度为0的方式来找，这里只有C满足，排除法</p><p>D 表格法</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516201739579.png" alt="image-20220516201739579"></p><p>上面是公理（公理系统），下面是推论</p><p>X-&gt;Y，则WX-&gt;WY-&gt;Z，故XW-&gt;Z</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516202411179.png" alt="image-20220516202411179"></p><h2 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220516202431606.png" alt="image-20220516202431606"></p><p>S封锁-共享锁，读锁</p><p>X封锁-写锁，排他锁，独占锁</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517191527292.png" alt="image-20220517191527292"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517191851640.png" alt="image-20220517191851640"></p><p>丢失修改即丢失更新</p><p>S锁（读锁）—&gt; 对于T1如果对A加了读锁，其他事务只能在A上加读锁，不能加写锁。事务T1自己可以升级S锁到X锁。</p><p>X锁（写锁）—&gt; 对于T1如果对A加了写锁，其他事务不能对A加任何锁。</p><p>上面说明了写锁具有排他性。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517192045979.png" alt="image-20220517192045979"></p><p>T2这里应该是读A=5</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517192124085.png" alt="image-20220517192124085"></p><p>T1的⑧应该要加上释放对A的写锁</p><p>ROLLBACK会还原所有状态，因此写锁就被解除了</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517192256751.png" alt="image-20220517192256751"></p><h2 id="数据库完整性约束"><a href="#数据库完整性约束" class="headerlink" title="数据库完整性约束"></a>数据库完整性约束</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517193357327.png" alt="image-20220517193357327"></p><h2 id="数据库安全"><a href="#数据库安全" class="headerlink" title="数据库安全"></a>数据库安全</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517193528774.png" alt="image-20220517193528774"></p><h2 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517193728691.png" alt="image-20220517193728691"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517193912586.png" alt="image-20220517193912586"></p><p>插入、删除、更新都需要记录到日志，变更前后的都要记录</p><h2 id="数据库故障与恢复"><a href="#数据库故障与恢复" class="headerlink" title="数据库故障与恢复"></a>数据库故障与恢复</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517194414034.png" alt="image-20220517194414034"></p><p>系统故障又称为软故障</p><p>介质故障又称为硬件故障</p><p>可预期故障，如编程里面的逻辑错误</p><h2 id="分布式数据库"><a href="#分布式数据库" class="headerlink" title="分布式数据库"></a>分布式数据库</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517194914268.png" alt="image-20220517194914268"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517195748866.png" alt="image-20220517195748866"></p><p>分布透明性-用户不需要关心数据库的分布，故透明</p><p>分布式：物理上分散存储</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517200010921.png" alt="image-20220517200010921"></p><h2 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517200444292.png" alt="image-20220517200444292"></p><p>处理高并发和海量数据存储问题。代表Redis、MongoDB等</p><p>向上扩展(垂直扩展)：升级机器配置，如内存，CPU</p><p>向外扩展(水平扩展)：数据库集群，主从数据库</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517200847841.png" alt="image-20220517200847841"></p><h2 id="反规范化"><a href="#反规范化" class="headerlink" title="反规范化"></a>反规范化</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517201108575.png" alt="image-20220517201108575"></p><p>牺牲空间，压缩时间，增加冗余</p><p>分割表 - 把一个表经常查询的部分字段分割出来，加快查询速度，和重新组表（提取不同表的常用查询部分）相似的意思</p><h2 id="内存数据库"><a href="#内存数据库" class="headerlink" title="内存数据库"></a>内存数据库</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517201528979.png" alt="image-20220517201528979"></p><p>需要定期数据备份，费内存，成本高</p><h2 id="数据库性能优化"><a href="#数据库性能优化" class="headerlink" title="数据库性能优化"></a>数据库性能优化</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220517201750984.png" alt="image-20220517201750984"></p><h2 id="何谓大数据"><a href="#何谓大数据" class="headerlink" title="何谓大数据"></a>何谓大数据</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192106309.png" alt="image-20220518192106309"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192125479.png" alt="image-20220518192125479"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192357915.png" alt="image-20220518192357915"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192508654.png" alt="image-20220518192508654"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192521935.png" alt="image-20220518192521935"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220518192552395.png" alt="image-20220518192552395"></p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】14. 操作系统</title>
    <link href="http://www.ionluo.cn/blog/posts/8ac0c7c1.html"/>
    <id>http://www.ionluo.cn/blog/posts/8ac0c7c1.html</id>
    <published>2022-05-23T02:34:57.414Z</published>
    <updated>2022-06-10T09:03:44.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502102610530.png" alt="image-20220502102610530"></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502102652786.png" alt="image-20220502102652786"></p><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502102822586.png" alt="image-20220502102822586"></p><p>三态模型 - 五态模型</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502103334505.png" alt="image-20220502103334505"></p><p>DA</p><p>导致进程的挂起和激活有很多原因</p><h3 id="前趋图"><a href="#前趋图" class="headerlink" title="前趋图"></a>前趋图</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508090617448.png" alt="image-20220508090617448"></p><h3 id="进程的同步与互斥"><a href="#进程的同步与互斥" class="headerlink" title="进程的同步与互斥"></a>进程的同步与互斥</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508090806392.png" alt="image-20220508090806392"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508091615735.png" alt="image-20220508091615735"></p><h3 id="PV操作"><a href="#PV操作" class="headerlink" title="PV操作"></a>PV操作</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508091825556.png" alt="image-20220508091825556"></p><p>临界区是一段代码</p><p>PV操作是一种原子操作，P是阻塞(-1, &lt;0)，V是释放(+1,&lt;=0)</p><p>信号量代表的是资源的数量</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508092146584.png" alt="image-20220508092146584"></p><p>P是锁定资源或者检查资源，V是释放资源并通知</p><p>空间资源=4，则初始信号量S1=4</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508093019008.png" alt="image-20220508093019008"></p><blockquote><p>原题见：<a href="https://wangxiao.xisaiwang.com/tiku2/85174.html">https://wangxiao.xisaiwang.com/tiku2/85174.html</a></p><p>在此题中，信号量S是一个互斥信号量，作用是避免多个进程同时对余票数量进行处理导致问题，所以初值应置为1。<br>程序中（a）应使用P（S）操作，代表占用资源，（c）是成功完成订票时释放资源进行的操作，应该进行V（S）操作，（b）是指当前没有足够的余票，未完成出票，此时，也要释放资源，所以也应该进行V（S）操作。</p><p>BA</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508095709012.png" alt="image-20220508095709012"></p><p>P检查资源占用，V通知资源占用解除</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508100205778.png" alt="image-20220508100205778"></p><p>CAA</p><blockquote><p>右侧图可以认为是左侧图的拆解 </p><p>解题方法：给箭头标上PV，如下图（线段上面也可以标注信号量）。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508100730568.png" alt="image-20220508100730568"></p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508114333451.png" alt="image-20220508114333451"></p><p>DAC</p><blockquote><p>p操作才会中断程序，v操作不会中断程序，可以把p认为是一个await或者sleep</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508115109313.png" alt="image-20220508115109313"></p><h3 id="死锁问题"><a href="#死锁问题" class="headerlink" title="死锁问题"></a>死锁问题</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508115559610.png" alt="image-20220508115559610"></p><p>13</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508120020978.png" alt="image-20220508120020978"></p><p>所需最少资源数（不产生死锁）情况： m &gt;= n * (w-1) + 1 </p><p>B</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508120228362.png" alt="image-20220508120228362"></p><p>四大条件：资源互斥（即资源共享就打破该条件）、进程保持和等待（即进程无法完成则释放资源就打破该条件）、资源不剥夺（即可以抢占资源来完成进程任务，放弃任务）、环路等待</p><p>死锁发生一定会满足四大条件</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508120810033.png" alt="image-20220508120810033"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508121018858.png" alt="image-20220508121018858"></p><p>解答过程如下：</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508121109130.png" alt="image-20220508121109130"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508121120600.png" alt="image-20220508121120600"></p><blockquote><p>B</p><p>安全序列一般不是唯一的，这里带入验证即可。<br>进程完成后会释放所有资源</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508121129866.png" alt="image-20220508121129866"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220508121147634.png" alt="image-20220508121147634"></p><p>B A D</p><h2 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h2><h3 id="页式存储组织"><a href="#页式存储组织" class="headerlink" title="页式存储组织"></a>页式存储组织</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220515151601379.png" alt="image-20220515151601379"></p><p>4KB=2^12bit，因此逻辑地址需要12位来表示。题目中提供的 逻辑地址有14位，因此前2位是页号，即10，转为10进制为2，查表可知对应的物理地址是6(110)，故物理地址是110 xxxx</p><blockquote><p>逻辑地址一般是连续的</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220515153952113.png" alt="image-20220515153952113"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220515154337865.png" alt="image-20220515154337865"></p><p>D B</p><blockquote><p>4K=2^12bit，则逻辑地址5A29H的5代表页号，其页帧号对应6，故物理地址的16进制是5A29H（H代表16进制。1个十六进制需要4个二进制位才能表示）</p><p>先淘汰访问位为0的，然后再淘汰修改位为0的</p></blockquote><h3 id="段式存储组织"><a href="#段式存储组织" class="headerlink" title="段式存储组织"></a>段式存储组织</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220515155051398.png" alt="image-20220515155051398"></p><p>段式和页式的区别</p><p>分段是根据逻辑来的一个功能，或者一个业务逻辑作为一个逻辑段</p><p>表示段内地址：（段号，段内偏移量）</p><p>非法段地址是因为段长是30K,35K的段内偏移量所以是非法的</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521105746643.png" alt="image-20220521105746643"></p><p>B</p><blockquote><p>这里段基地址没有关系</p></blockquote><h3 id="段页式存储组织"><a href="#段页式存储组织" class="headerlink" title="段页式存储组织"></a>段页式存储组织</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521110036178.png" alt="image-20220521110036178"></p><h3 id="快表"><a href="#快表" class="headerlink" title="快表"></a>快表</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521110153700.png" alt="image-20220521110153700"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521110251888.png" alt="image-20220521110251888"></p><p>D</p><h3 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521110508343.png" alt="image-20220521110508343"></p><p>最优算法：是理想型，一般用于作为评价标准，因为无法认定此算法就是最优的</p><p>随机算法：随机淘汰</p><p>先进先出：当页长为3的时候，示例中的数字一直在调入调出，即“抖动”</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521110521025.png" alt="image-20220521110521025"></p><p>A C</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521112335080.png" alt="image-20220521112335080"></p><p>缺页中断：访问当前页不在内存，则产生缺页中断</p><p>页面可存在200个整数变量，因此一开始访问内存页中不存在所需数据则发生缺页中断，因此调用一个空页数据是 A(1,1) -&gt; A(2, 100)，即前面2行。访问到第3行的时候，数据又不存在了，又发生缺页中断，调入一个空页数据 A(3,1) -&gt; A(4, 100) 。当访问到第7行时，3个空页都满了，且第7行所需的数据不在页中，根据LRU淘汰最前面的2行数据（页），然后继续调入，以此类推。每执行2行就会发生一次缺页中断。发生次数：100 / 2 。 </p><p>这里值得注意的是每次循环都会调用程序，所以程序一直占有一个页面，变量可以使用的就3个页面（这个和问题没有啥关系，因为程序只有1个页面也不影响结果）。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521121541494.png" alt="image-20220521121541494"></p><p>按列存储则是列读取，每调入一次页面只有2个变量可用，到第3个就出现了数据不存在的问题，发生了缺页中断。因此一行有50次缺页中断，一共有50 * 100</p><p>注意的就是程序访问数据的顺序是根据程序逻辑来决定的</p><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="索引文件结构"><a href="#索引文件结构" class="headerlink" title="索引文件结构"></a>索引文件结构</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521122154262.png" alt="image-20220521122154262"></p><p>物理盘块不连续，索引结点连续</p><p>一个地址项-物理盘块号大小为4B，假设一个物理盘块大小1KB，如果13个索引结点都是直接索引，则占用空间为 13 * 4B + 13 * 1KB。如果按照图中的结构，占用空间为：(10 * 4B + 10 * 1KB) + (1 * 4B + 1 * 1KB + 1000 / 4 * 1KB) + (1 * 4B + 1 * 1KB + 1000 / 4 * 1KB + (1000 / 4 ) ^ 2 * 1KB) + (1 * 4B + 1 * 1KB + 1000 / 4 * 1KB + (1000 / 4 ) ^ 2 * 1KB + (1000 / 4 ) ^ 3 * 1KB)</p><blockquote><p>+号连接是的各个间接索引的占用空间量；间接索引里面是用一个物理块存储索引</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521123617630.png" alt="image-20220521123617630"></p><p>C D</p><blockquote><p>addr[0]的物理编号和逻辑编号分别是50、0</p><p>addr[1]的物理编号和逻辑编号分别是：67、1 （其他直接索引依此类推）</p><p>addr[5]的物理编号和逻辑编号分别是：58、5，这里的90代表索引盘块位置（也是物理块，存储的是一级间接索引在物理盘块的索引位置），58下面的索引则是顺序编号，6、7、8_，分别是逻辑编号。这里可以算出索引盘的逻辑编号最大值是 1KB/4B + 5 - 1 = 256 + 4 = 260。</p><p>addr[6]的物理编号和逻辑编号分别是：187、261。这里因为addr[5]的最大逻辑编号是260，因此这里是261（顺序编号）</p><p>物理块号不一定连续，逻辑块号一定连续</p></blockquote><h3 id="文件和树形目录结构"><a href="#文件和树形目录结构" class="headerlink" title="文件和树形目录结构"></a>文件和树形目录结构</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521170535665.png" alt="image-20220521170535665"></p><h3 id="空闲存储空间的管理"><a href="#空闲存储空间的管理" class="headerlink" title="空闲存储空间的管理"></a>空闲存储空间的管理</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521171229745.png" alt="image-20220521171229745"></p><p>索引文件存储到物理块就需要知道哪些物理块被使用了，哪些是空闲的，位示图就可以表示磁盘的状态（空闲、已存储）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521172917781.png" alt="image-20220521172917781"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521173308031.png" alt="image-20220521173308031"></p><p>D B</p><blockquote><p>注意第二个空是问的该字的第几个位置，这里(4195+1)%32=4.</p><p><del>好吧，不懂，这里按道理这样子计算是第4位置，后面的0和1不知道咋的出来的，第n字的0和1又是咋的出来的？？？？</del></p><p>这里图示没有用，选项的0和1是根据图示说明要把这个位置标为1表示占用了，这~~~</p></blockquote><h2 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h2><h3 id="数据传输控制方式"><a href="#数据传输控制方式" class="headerlink" title="数据传输控制方式"></a>数据传输控制方式</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521175643877.png" alt="image-20220521175643877"></p><p>中断方式当中断次数过多存在数据丢失的可能,因此适合实时和小数据量的情况</p><p>前面2种是软件方式，后面的是硬件方式</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521180640821.png" alt="image-20220521180640821"></p><p>C</p><h3 id="虚设备与SPOOLING技术"><a href="#虚设备与SPOOLING技术" class="headerlink" title="虚设备与SPOOLING技术"></a>虚设备与SPOOLING技术</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521181008366.png" alt="image-20220521181008366"></p><p>虚设备经常是结合磁盘来使用的</p><p>请求到输入缓冲区（磁盘）排队</p><h2 id="微内核操作系统"><a href="#微内核操作系统" class="headerlink" title="微内核操作系统"></a>微内核操作系统</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521181210878.png" alt="image-20220521181210878"></p><h2 id="嵌入式操作系统"><a href="#嵌入式操作系统" class="headerlink" title="嵌入式操作系统"></a>嵌入式操作系统</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521181531366.png" alt="image-20220521181531366"></p><p>如现在的操作系统的区别主要是软硬件结合，现在的常规操作系统属于软件层面。会有功能在硬件上的分布。</p><p>主要应用是国防军工，日常的话主要有洗衣机，指纹锁，电梯都是嵌入式系统</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220521182100939.png" alt="image-20220521182100939"></p><p>C B</p><p>使用时钟图画出占用</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220522213036600.png" alt="image-20220522213036600"></p><blockquote><p>这里第一个选项选择就近的</p></blockquote>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】13. 系统配置与性能评估</title>
    <link href="http://www.ionluo.cn/blog/posts/7ad8373c.html"/>
    <id>http://www.ionluo.cn/blog/posts/7ad8373c.html</id>
    <published>2022-05-23T02:34:57.413Z</published>
    <updated>2022-06-10T09:03:44.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502092653213.png" alt="image-20220502092653213"></p><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502092717004.png" alt="image-20220502092717004"></p><p>主频的倒数是时钟周期，1GHZ=1000MHZ=1000^2KHZ=1000^3HZ</p><blockquote><p>上面每个时钟周期计算是错的，应该是 <code>1s/1G=1/(1000*1000*1000)= 1ns</code></p></blockquote><p>MIPS(每秒百万级指令数) MFLOPS(每秒百万浮点操作)</p><blockquote><p>PS 是每秒  M是百万级</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502094335137.png" alt="image-20220502094335137"></p><p><code>指令平均时钟数=总的时钟周期/总的指令条数=(120000*1+36000*2+24000*4+20000*8)/(120000+36000+24000+20000) = 44.8W/20W=2.24</code></p><p>MIPS(每秒百万级指令数) = 一秒时钟周期/一条指令的时钟周期=400W/2.24 = 178.57142857142856</p><h2 id="阿姆达尔解决方案"><a href="#阿姆达尔解决方案" class="headerlink" title="阿姆达尔解决方案"></a>阿姆达尔解决方案</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502100158538.png" alt="image-20220502100158538"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502100206489.png" alt="image-20220502100206489"></p><p>(0.6+0.4) / (0.6/5+0.4)  = 1.923076923076923</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502100606729.png" alt="image-20220502100606729"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502100801491.png" alt="image-20220502100801491"></p><h2 id="性能评价方法"><a href="#性能评价方法" class="headerlink" title="性能评价方法"></a>性能评价方法</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502100843594.png" alt="image-20220502100843594"></p><p>等效指令速度法在上面的性能指标的例题就是了</p><p>数据处理速率法考虑了存储性能，比如现在很多笔记本取消光驱用来安装固态硬盘就是提高PDR</p><p>基准程序法：如对手机或者电脑进行跑分就是用的基准程序法。但是真实程序跑分的评分会更正确些，因为跑分程序提取的核心程序不一定是你常用的程序功能。下面有一个评分的可靠性的排名：真实&gt;核心&gt;基准</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502101438633.png" alt="image-20220502101438633"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502101719936.png" alt="image-20220502101719936"></p><p>A: 压力测试 B: 集成测试 C:基准测试 D:单元测试</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220502101831057.png" alt="image-20220502101831057"></p><p>B</p><blockquote><p>D 阿姆达尔解决方案例题中说明了多处理机性能和CPU数目关系是存在极限的正比关系，不能作为主要途径</p></blockquote>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>【系统分析师】12. 计算机组成与体系结构</title>
    <link href="http://www.ionluo.cn/blog/posts/852f824a.html"/>
    <id>http://www.ionluo.cn/blog/posts/852f824a.html</id>
    <published>2022-05-23T02:34:57.412Z</published>
    <updated>2022-06-10T09:03:44.775Z</updated>
    
    <content type="html"><![CDATA[<p>一般占据6分分值</p><h2 id="课程内容提要"><a href="#课程内容提要" class="headerlink" title="课程内容提要"></a>课程内容提要</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425190638012.png" alt="image-20220425190638012"></p><h2 id="编码及浮点数运算"><a href="#编码及浮点数运算" class="headerlink" title="编码及浮点数运算"></a>编码及浮点数运算</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425191105678.png" alt="image-20220425191105678"></p><p>在计算机中，基数不存储，因为基数在计算机里面是2（二进制）</p><h2 id="Flynn分类法"><a href="#Flynn分类法" class="headerlink" title="Flynn分类法"></a>Flynn分类法</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425193253607.png" alt="image-20220425193253607"></p><p>I（Instructions）: 指令 D（Data）：数据</p><p>S: 单个（Single） M：多个（Multiple）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425193630597.png" alt="image-20220425193630597"></p><p>AD</p><h2 id="CISC与RISC"><a href="#CISC与RISC" class="headerlink" title="CISC与RISC"></a>CISC与RISC</h2><p>指令系统的分类：复杂指令集 、 精简指令集</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425193726546.png" alt="image-20220425193726546"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425194206212.png" alt="image-20220425194206212"></p><p>寄存器过多是精简指令集的特点</p><p>C</p><h2 id="流水线"><a href="#流水线" class="headerlink" title="流水线"></a>流水线</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425194339441.png" alt="image-20220425194339441"></p><p>流水线的建立时间是一个流水线完成的时间，流水线建立后，其取指、分析、执行花费时间最多的时间就是流水线周期。</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425194719979.png" alt="image-20220425194719979"></p><p>考试时如果没有理论公式的答案，就选实践公式的。</p><p>串行执行也就是顺序执行</p><ol><li>4 </li><li>(3 + 2 + 4) * 10 = 90  </li><li>3 + 2 + 4 + (10 - 1) * 4 = 45</li></ol><blockquote><p>对于度为2的超标量流水线，其执行时间为 3+2+4+(10/2-1)*4</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425195624860.png" alt="image-20220425195624860"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425195700714.png" alt="image-20220425195700714"></p><p>度为2的超标量流水线</p><h3 id="流水线吞吐率"><a href="#流水线吞吐率" class="headerlink" title="流水线吞吐率"></a>流水线吞吐率</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425200002361.png" alt="image-20220425200002361"></p><h3 id="流水线加速比"><a href="#流水线加速比" class="headerlink" title="流水线加速比"></a>流水线加速比</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425200137476.png" alt="image-20220425200137476"></p><p>流水线加速比一般大于1</p><p>流水线最大加速比 = k （分段数）</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425200235125.png" alt="image-20220425200235125"></p><p>1+1+1+(16-1)*1 = 18</p><p>1+1+1+(16/4-1)*1 = 6</p><p>指令条数不能整除需要向上取整，例如15条指令对应的流水线条数为 Math.ceil(15/4)</p><p> <img src="http://blog.cdn.ionluo.cn/blog/image-20220425200738447.png" alt="image-20220425200738447"></p><h2 id="存储系统"><a href="#存储系统" class="headerlink" title="存储系统"></a>存储系统</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425200820077.png" alt="image-20220425200820077"></p><h3 id="Cache"><a href="#Cache" class="headerlink" title="Cache"></a>Cache</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220425201136242.png" alt="image-20220425201136242"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430145853317.png" alt="image-20220430145853317"></p><p><strong>例题详解</strong></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430150047776.png" alt="image-20220430150047776"></p><p>B C</p><blockquote><p>理论依据是局部性原理</p><p>辅存也是外部存储的意思</p></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430150223611.png" alt="image-20220430150223611"></p><p>程序运行时可能存在大小不够用的情况，就需要使用页面淘汰算法</p><p>淘汰算法中还有一种LFU的算法，即统计使用次数，使用次数最少的被淘汰</p><p>映射方式是由硬件直接完成的，具体见下图</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430151025442.png" alt="image-20220430151025442"></p><p>将主存和Cache都划分为相同大小的页，也称之为块</p><p> <img src="http://blog.cdn.ionluo.cn/blog/image-20220430151319313.png" alt="image-20220430151319313"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430151628537.png" alt="image-20220430151628537"></p><p>A B</p><h3 id="主存"><a href="#主存" class="headerlink" title="主存"></a>主存</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430151721121.png" alt="image-20220430151721121"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430151748330.png" alt="image-20220430151748330"></p><p>按字节编址说明一个存储单元存储的是一个字节（1Byte=8bit，一字节等于8比特）</p><p>存储总容量 = 存储单元个数*存储内容</p><p>H标识代表16进制</p><p>总容量16进制 = 8FFFFH - 84000H + 1 = C000H（注意借位就不是10了而是16，因此16-4=12=C）</p><p><em>把C000H转成2进制后转成10进制得到存储总容量</em></p><p>总容量10进制 = 48K*8bit(按字节编址)</p><p>存储芯片个数 = 总容量 / 单位容量</p><h3 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430153327027.png" alt="image-20220430153327027"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430153648932.png" alt="image-20220430153648932"></p><p>寻道时间=10*10=100ms</p><p>共需时间 = (寻道时间+旋转延迟时间+传输时间)*100 = 20200</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430153847554.png" alt="image-20220430153847554"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430155139460.png" alt="image-20220430155139460"></p><p>每个逻辑记录的旋转时间是 33/11 = 3ms</p><p>当处理完R0的时候，磁头就旋转到R1了</p><p>R0的读取和处理时间=3+3=6ms</p><p>R0之外的其他逻辑记录读取处理时间=(旋转一周的时间+读取时间+处理时间) * 需要处理的逻辑记录个数 = (3*10+3+3) * 10 = 360</p><p>因此最长时间=6+360=366</p><p>优化后的结构（右图）只需要旋转2周就可以全部读取处理完毕，因此花费时间=33*2=66</p><h2 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430161505071.png" alt="image-20220430161505071"></p><p>半双工</p><h2 id="校验码"><a href="#校验码" class="headerlink" title="校验码"></a>校验码</h2><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430161821352.png" alt="image-20220430161821352"></p><p>奇偶校验（只能检错）、CRC循环校验（只能检错）、海明校验（既可以检错也可以纠错）</p><p><a href="https://www.ionluo.cn/blog/posts/14ca2885.html#%E6%A0%A1%E9%AA%8C%E7%A0%81">https://www.ionluo.cn/blog/posts/14ca2885.html#%E6%A0%A1%E9%AA%8C%E7%A0%81</a></p><p>3位二进制有000 100 010 001 110 101 011 111共8种，这里码字的最小距离是1（如000和010）最大距离是3（如000和111、100和011），因此码距是1。如果编码系统有10 01两种的话，码距就是2。规定编码系统就是为了提高容错能力，增加冗余信息，方便校错</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430164957921.png" alt="image-20220430164957921"></p><p>奇偶校验：信息位+校验位的1的个数为奇/偶数</p><p>循环校验：通常使用模2除法</p><blockquote><ol><li>不需要借位</li><li>中间使用异或计算（二者相同则为0，二者不同则为1）</li><li>校验方式是信息位+校验位能够被生成多项式整除</li></ol></blockquote><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430165636509.png" alt="image-20220430165636509"></p><p>上面的生成多项式分别是x的0-4次方的系数，作为模二除法的除数</p><p>被除数位数需要是除数的整数倍，因此这里需要补充4个0</p><p>最终计算的校验位就是 0011</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430171450771.png" alt="image-20220430171450771"></p><p>2^r&gt;=m+r+1</p><p>r是校验码位数，m是信息位数。当给出信息位数时候，可以根据公式等到校验位数。如上图，校验位数是3的时候，校验码放置的位置就是2^0、2^1和2^2次方的位置</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430174207171.png" alt="image-20220430174207171"></p><p>2^4 &gt;= 6 + 4 + 1, 因此r=4</p><h3 id="可靠性分析"><a href="#可靠性分析" class="headerlink" title="可靠性分析"></a>可靠性分析</h3><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430184155035.png" alt="image-20220430184155035"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430184858104.png" alt="image-20220430184858104"></p><p>B A</p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430185046992.png" alt="image-20220430185046992"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430185328059.png" alt="image-20220430185328059"></p><p><img src="http://blog.cdn.ionluo.cn/blog/image-20220430185350454.png" alt="image-20220430185350454"></p><p>D</p>]]></content>
    
    
    <summary type="html">-</summary>
    
    
    
    
    <category term="软考" scheme="http://www.ionluo.cn/blog/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="系统分析师" scheme="http://www.ionluo.cn/blog/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88/"/>
    
  </entry>
  
</feed>
